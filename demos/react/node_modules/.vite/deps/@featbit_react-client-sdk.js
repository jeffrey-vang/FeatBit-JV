import {
  __commonJS,
  __export,
  __reExport,
  __toESM,
  require_react
} from "./chunk-WTE4NUGW.js";

// node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/IBootstrapProvider.js
var require_IBootstrapProvider = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/IBootstrapProvider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/store/DataKinds.js
var require_DataKinds = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/store/DataKinds.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var DataKinds = class {
    };
    DataKinds.Flags = {
      namespace: "flags"
    };
    exports.default = DataKinds;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/store/serialization.js
var require_serialization = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/store/serialization.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.deserializePatch = exports.deserializeAll = void 0;
    var DataKinds_1 = __importDefault(require_DataKinds());
    function deserializeAll(flags) {
      const result = {
        [DataKinds_1.default.Flags.namespace]: {}
      };
      if (flags === null || flags === void 0 ? void 0 : flags.length) {
        result[DataKinds_1.default.Flags.namespace] = flags.reduce((acc, cur) => {
          acc[cur.id] = Object.assign(Object.assign({}, cur), { version: cur.timestamp || 0, key: cur.id, variations: cur.variationOptions });
          return acc;
        }, {});
      }
      return result;
    }
    exports.deserializeAll = deserializeAll;
    function deserializePatch(flags) {
      const result = [
        ...(flags === null || flags === void 0 ? void 0 : flags.map((item) => ({
          data: Object.assign(Object.assign({}, item), { version: item.timestamp, key: item.id, variations: item.variationOptions }),
          kind: DataKinds_1.default.Flags
        }))) || []
      ];
      return result;
    }
    exports.deserializePatch = deserializePatch;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/isNullOrUndefined.js
var require_isNullOrUndefined = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/isNullOrUndefined.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isNullOrUndefined = void 0;
    function isNullOrUndefined(val) {
      return val === null || val === void 0;
    }
    exports.isNullOrUndefined = isNullOrUndefined;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/JsonBootstrapProvider.js
var require_JsonBootstrapProvider = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/JsonBootstrapProvider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.JsonBootstrapProvider = void 0;
    var serialization_1 = require_serialization();
    var isNullOrUndefined_1 = require_isNullOrUndefined();
    var JsonBootstrapProvider = class {
      constructor(bootstrap) {
        const flags = (bootstrap || []).map((flag) => Object.assign(Object.assign({}, flag), { variationOptions: flag.variationOptions || [{ id: null, variation: flag.variation }] }));
        const data = (0, serialization_1.deserializeAll)(flags);
        this.dataSet = {
          flags: data.flags,
          version: 0
        };
      }
      populate(userKeyId, dataSourceUpdates, callback) {
        return new Promise((resolve, reject) => {
          if ((0, isNullOrUndefined_1.isNullOrUndefined)(this.dataSet)) {
            return resolve();
          }
          const internalCallback = () => {
            resolve();
            callback === null || callback === void 0 ? void 0 : callback();
          };
          dataSourceUpdates.init(userKeyId, this.dataSet, internalCallback);
        });
      }
    };
    exports.JsonBootstrapProvider = JsonBootstrapProvider;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/NullBootstrapProvider.js
var require_NullBootstrapProvider = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/NullBootstrapProvider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NullBootstrapProvider = void 0;
    var NullBootstrapProvider = class {
      constructor() {
        this.dataSet = {
          flags: {},
          version: 0
        };
      }
      populate(userKeyId, dataSourceUpdates, callback) {
        return new Promise((resolve, reject) => {
          resolve();
          callback === null || callback === void 0 ? void 0 : callback();
        });
      }
    };
    exports.NullBootstrapProvider = NullBootstrapProvider;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/index.js
var require_bootstrap = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/bootstrap/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_IBootstrapProvider(), exports);
    __exportStar(require_JsonBootstrapProvider(), exports);
    __exportStar(require_NullBootstrapProvider(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sources/createStreamListeners.js
var require_createStreamListeners = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sources/createStreamListeners.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createStreamListeners = exports.createPatchListener = exports.createPutListener = void 0;
    var serialization_1 = require_serialization();
    var createPutListener = (dataSourceUpdates, logger, onPutCompleteHandler = () => {
    }) => ({
      deserializeData: serialization_1.deserializeAll,
      processJson: (userKeyId, { flags }) => __awaiter4(void 0, void 0, void 0, function* () {
        const initData = {
          flags,
          version: 0
        };
        logger === null || logger === void 0 ? void 0 : logger.debug("Initializing all data");
        dataSourceUpdates.init(userKeyId, initData, onPutCompleteHandler);
      })
    });
    exports.createPutListener = createPutListener;
    var createPatchListener = (dataSourceUpdates, logger, onPatchCompleteHandler = () => {
    }) => ({
      deserializeData: serialization_1.deserializePatch,
      processJson: (userKeyId, data) => __awaiter4(void 0, void 0, void 0, function* () {
        if ((data === null || data === void 0 ? void 0 : data.length) === 0) {
          onPatchCompleteHandler === null || onPatchCompleteHandler === void 0 ? void 0 : onPatchCompleteHandler();
          return;
        }
        data === null || data === void 0 ? void 0 : data.forEach((item) => {
          logger === null || logger === void 0 ? void 0 : logger.debug(`Updating ${item.data.key} in ${item.kind.namespace}`);
          dataSourceUpdates.upsert(userKeyId, item.kind, item.data, onPatchCompleteHandler);
        });
      })
    });
    exports.createPatchListener = createPatchListener;
    var createStreamListeners = (dataSourceUpdates, logger, onCompleteHandlers) => {
      const listeners = /* @__PURE__ */ new Map();
      listeners.set("put", (0, exports.createPutListener)(dataSourceUpdates, logger, onCompleteHandlers === null || onCompleteHandlers === void 0 ? void 0 : onCompleteHandlers.put));
      listeners.set("patch", (0, exports.createPatchListener)(dataSourceUpdates, logger, onCompleteHandlers === null || onCompleteHandlers === void 0 ? void 0 : onCompleteHandlers.patch));
      return listeners;
    };
    exports.createStreamListeners = createStreamListeners;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sources/DataSourceUpdates.js
var require_DataSourceUpdates = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sources/DataSourceUpdates.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var DataKinds_1 = __importDefault(require_DataKinds());
    var DataSourceUpdates = class {
      constructor(store, hasEventListeners, onChange) {
        this.store = store;
        this.hasEventListeners = hasEventListeners;
        this.onChange = onChange;
      }
      init(userKeyId, allData, callback) {
        if (userKeyId !== this.store.user.keyId) {
          callback === null || callback === void 0 ? void 0 : callback();
          return;
        }
        const checkForChanges = this.hasEventListeners();
        const doInit = (oldData) => __awaiter4(this, void 0, void 0, function* () {
          yield this.store.init(allData);
          Promise.resolve().then(() => {
            if (checkForChanges) {
              const updatedKeys = Object.keys(allData).flatMap((namespace) => {
                const oldDataForKind = (oldData === null || oldData === void 0 ? void 0 : oldData[namespace]) || {};
                const newDataForKind = allData[namespace];
                const mergedData = Object.assign(Object.assign({}, oldDataForKind), newDataForKind);
                return Object.keys(mergedData).filter((key) => this.isUpdated(oldDataForKind && oldDataForKind[key], newDataForKind && newDataForKind[key]));
              });
              updatedKeys.length > 0 && this.onChange(updatedKeys);
            }
          });
          callback === null || callback === void 0 ? void 0 : callback();
        });
        if (checkForChanges) {
          const [flags, version] = this.store.all(DataKinds_1.default.Flags);
          const oldData = {
            flags,
            version
          };
          doInit(oldData);
        } else {
          doInit();
        }
      }
      checkUpdates(oldData, newData, callback) {
        const checkForChanges = this.hasEventListeners();
        if (!checkForChanges) {
          return;
        }
        const updatedKeys = Object.keys(newData).flatMap((namespace) => {
          const oldDataForKind = (oldData === null || oldData === void 0 ? void 0 : oldData[namespace]) || {};
          const newDataForKind = newData[namespace];
          const mergedData = Object.assign(Object.assign({}, oldDataForKind), newDataForKind);
          return Object.keys(mergedData).filter((key) => this.isUpdated(oldDataForKind && oldDataForKind[key], newDataForKind && newDataForKind[key]));
        });
        updatedKeys.length > 0 && this.onChange(updatedKeys);
        callback === null || callback === void 0 ? void 0 : callback();
      }
      upsert(userKeyId, kind, data, callback) {
        if (userKeyId !== this.store.user.keyId) {
          callback === null || callback === void 0 ? void 0 : callback();
          return;
        }
        const { key } = data;
        const checkForChanges = this.hasEventListeners();
        const doUpsert = (oldItem) => __awaiter4(this, void 0, void 0, function* () {
          yield this.store.upsert(kind, data);
          Promise.resolve().then(() => {
            if (checkForChanges && this.isUpdated(oldItem, data[key])) {
              this.onChange([key]);
            }
          });
          callback === null || callback === void 0 ? void 0 : callback();
        });
        if (checkForChanges) {
          const item = this.store.get(kind, key);
          doUpsert(item || void 0);
        } else {
          doUpsert();
        }
      }
      isUpdated(oldData, newData) {
        if (!oldData && !newData) {
          return false;
        }
        if (!oldData || !newData) {
          return true;
        }
        return newData.version >= oldData.version && newData.variation !== oldData.variation;
      }
    };
    exports.default = DataSourceUpdates;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sources/index.js
var require_data_sources = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sources/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_createStreamListeners(), exports);
    __exportStar(require_DataSourceUpdates(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/evaluation/data/IFlag.js
var require_IFlag = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/evaluation/data/IFlag.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VariationDataType = void 0;
    var VariationDataType;
    (function(VariationDataType2) {
      VariationDataType2["string"] = "string";
      VariationDataType2["boolean"] = "boolean";
      VariationDataType2["number"] = "number";
      VariationDataType2["json"] = "json";
      VariationDataType2["empty"] = "";
    })(VariationDataType || (exports.VariationDataType = VariationDataType = {}));
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/evaluation/data/index.js
var require_data = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/evaluation/data/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_IFlag(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/evaluation/ReasonKinds.js
var require_ReasonKinds = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/evaluation/ReasonKinds.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReasonKinds = void 0;
    var ReasonKinds;
    (function(ReasonKinds2) {
      ReasonKinds2["ClientNotReady"] = "ClientNotReady";
      ReasonKinds2["Match"] = "Match";
      ReasonKinds2["WrongType"] = "WrongType";
      ReasonKinds2["FlagNotFound"] = "FlagNotFound";
      ReasonKinds2["Error"] = "Error";
    })(ReasonKinds || (exports.ReasonKinds = ReasonKinds = {}));
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/event.js
var require_event = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/event.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EvalEvent = exports.MetricEvent = exports.PayloadEvent = exports.ShutdownEvent = exports.FlushEvent = exports.AsyncEvent = void 0;
    var AsyncEvent = class {
      get hash() {
        return this.timestamp.toString();
      }
      constructor() {
        this.timestamp = (/* @__PURE__ */ new Date()).getTime();
        this.isCompletedPromise = new Promise((resolve) => {
          this.resolveFn = resolve;
        });
      }
      waitForCompletion() {
        return this.isCompletedPromise;
      }
      complete() {
        var _a;
        (_a = this.resolveFn) === null || _a === void 0 ? void 0 : _a.call(this, this);
      }
    };
    exports.AsyncEvent = AsyncEvent;
    var FlushEvent = class extends AsyncEvent {
    };
    exports.FlushEvent = FlushEvent;
    var ShutdownEvent = class extends AsyncEvent {
    };
    exports.ShutdownEvent = ShutdownEvent;
    var PayloadEvent = class {
      constructor() {
        this.timestamp = (/* @__PURE__ */ new Date()).getTime();
      }
      get hash() {
        return this.timestamp.toString();
      }
      toPayload() {
      }
    };
    exports.PayloadEvent = PayloadEvent;
    var MetricEvent = class extends PayloadEvent {
      constructor(user, eventName, appType, metricValue) {
        super();
        this.user = user;
        this.eventName = eventName;
        this.appType = appType;
        this.metricValue = metricValue;
      }
      userPayload() {
        return {
          keyId: this.user.keyId,
          name: this.user.name,
          customizedProperties: this.user.customizedProperties
        };
      }
      toPayload() {
        return {
          user: this.userPayload(),
          metrics: [{
            route: "index/metric",
            timestamp: this.timestamp,
            numericValue: this.metricValue,
            appType: this.appType,
            eventName: this.eventName,
            type: "CustomEvent"
          }]
        };
      }
      get hash() {
        const payload = this.toPayload();
        const hasObject = {
          user: payload.user,
          metrics: payload.metrics.map((m) => Object.assign(Object.assign({}, m), { timestamp: void 0 }))
        };
        return JSON.stringify(hasObject);
      }
    };
    exports.MetricEvent = MetricEvent;
    var EvalEvent = class extends PayloadEvent {
      constructor(user, flagKey, variation, sendToExperiment) {
        super();
        this.user = user;
        this.flagKey = flagKey;
        this.variation = variation;
        this.sendToExperiment = sendToExperiment;
      }
      userPayload() {
        return {
          keyId: this.user.keyId,
          name: this.user.name,
          customizedProperties: this.user.customizedProperties
        };
      }
      toPayload() {
        return {
          user: this.userPayload(),
          variations: [{
            featureFlagKey: this.flagKey,
            sendToExperiment: this.sendToExperiment,
            timestamp: this.timestamp,
            variation: this.variation
          }]
        };
      }
      get hash() {
        const payload = this.toPayload();
        const hasObject = {
          user: payload.user,
          variations: payload.variations.map((m) => Object.assign(Object.assign({}, m), { timestamp: void 0 }))
        };
        return JSON.stringify(hasObject);
      }
    };
    exports.EvalEvent = EvalEvent;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/evaluation/EvalResult.js
var require_EvalResult = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/evaluation/EvalResult.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ReasonKinds_1 = require_ReasonKinds();
    var event_1 = require_event();
    var EvalResult = class _EvalResult {
      constructor(kind, value, reason) {
        this.kind = kind;
        this.value = value;
        this.reason = reason;
      }
      static flagNotFound(flagKey) {
        return new _EvalResult(ReasonKinds_1.ReasonKinds.FlagNotFound, null, `flag not found: ${flagKey}`);
      }
      static matched(val) {
        return new _EvalResult(ReasonKinds_1.ReasonKinds.Match, val, "target match");
      }
      toEvalEvent(user) {
        var _a, _b, _c;
        if (this.kind !== ReasonKinds_1.ReasonKinds.Match) {
          return null;
        }
        const targetedVariation = (_a = this.value) === null || _a === void 0 ? void 0 : _a.variations.find((v) => {
          var _a2;
          return v.value === ((_a2 = this.value) === null || _a2 === void 0 ? void 0 : _a2.variation);
        });
        return new event_1.EvalEvent(user, (_b = this.value) === null || _b === void 0 ? void 0 : _b.id, targetedVariation, (_c = this.value) === null || _c === void 0 ? void 0 : _c.sendToExperiment);
      }
    };
    exports.default = EvalResult;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/evaluation/Evaluator.js
var require_Evaluator = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/evaluation/Evaluator.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var EvalResult_1 = __importDefault(require_EvalResult());
    var DataKinds_1 = __importDefault(require_DataKinds());
    var Evaluator = class {
      constructor(store) {
        this.store = store;
      }
      /**
       * Evaluate the given flag against the given context.
       * @param flagKey The key of the feature flag.
       */
      evaluate(flagKey) {
        const flag = this.store.get(DataKinds_1.default.Flags, flagKey);
        if (!flag) {
          return EvalResult_1.default.flagNotFound(flagKey);
        }
        return EvalResult_1.default.matched(flag);
      }
    };
    exports.default = Evaluator;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/evaluation/IEvalDetail.js
var require_IEvalDetail = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/evaluation/IEvalDetail.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/evaluation/index.js
var require_evaluation = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/evaluation/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_data(), exports);
    __exportStar(require_EvalResult(), exports);
    __exportStar(require_Evaluator(), exports);
    __exportStar(require_IEvalDetail(), exports);
    __exportStar(require_ReasonKinds(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/IEventSender.js
var require_IEventSender = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/IEventSender.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DeliveryStatus = void 0;
    var DeliveryStatus;
    (function(DeliveryStatus2) {
      DeliveryStatus2[DeliveryStatus2["Succeeded"] = 0] = "Succeeded";
      DeliveryStatus2[DeliveryStatus2["Failed"] = 1] = "Failed";
      DeliveryStatus2[DeliveryStatus2["FailedAndMustShutDown"] = 2] = "FailedAndMustShutDown";
    })(DeliveryStatus || (exports.DeliveryStatus = DeliveryStatus = {}));
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventQueue.js
var require_DefaultEventQueue = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventQueue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultEventQueue = void 0;
    var DefaultEventQueue = class {
      constructor(capacity, logger) {
        this.capacity = capacity;
        this.logger = logger;
        this.closed = false;
        this.events = [];
      }
      addEvent(event) {
        if (this.closed) {
          return false;
        }
        if (this.events.length >= this.capacity) {
          this.logger.warn("Events are being produced faster than they can be processed. We shouldn't see this.");
          return false;
        }
        this.events.push(event);
        return true;
      }
      clear() {
        this.events = [];
      }
      shift() {
        return this.events.shift();
      }
      close() {
        this.closed = true;
      }
      get eventsSnapshot() {
        return [...this.events];
      }
      get length() {
        return this.events.length;
      }
      get isEmpty() {
        return this.length === 0;
      }
    };
    exports.DefaultEventQueue = DefaultEventQueue;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/http.js
var require_http = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/http.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.httpErrorMessage = exports.defaultHeaders = void 0;
    function defaultHeaders(sdkKey, info) {
      const { userAgent, version } = info.sdkData();
      const headers = {
        "Content-Type": "application/json",
        "X-User-Agent": userAgent !== null && userAgent !== void 0 ? userAgent : `${info.appType}/${version}`,
        "Authorization": sdkKey
      };
      return headers;
    }
    exports.defaultHeaders = defaultHeaders;
    function httpErrorMessage(err, context2, retryMessage) {
      let desc;
      if (err.status) {
        desc = `error ${err.status}${err.status === 401 ? " (invalid SDK key)" : ""}`;
      } else {
        desc = `I/O error (${err.message || err})`;
      }
      const action = retryMessage !== null && retryMessage !== void 0 ? retryMessage : "giving up permanently";
      return `Received ${desc} for ${context2} - ${action}`;
    }
    exports.httpErrorMessage = httpErrorMessage;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/errors.js
var require_errors = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/errors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isHttpRecoverable = exports.TimeoutError = exports.ClientError = exports.UnexpectedResponseError = exports.StreamingError = exports.PollingError = void 0;
    var PollingError = class extends Error {
      constructor(message, status) {
        super(message);
        this.status = status;
        this.name = "FbPollingError";
      }
    };
    exports.PollingError = PollingError;
    var StreamingError = class extends Error {
      constructor(message, code) {
        super(message);
        this.code = code;
        this.name = "FbStreamingError";
      }
    };
    exports.StreamingError = StreamingError;
    var UnexpectedResponseError = class extends Error {
      constructor(message) {
        super(message);
        this.name = "FbUnexpectedResponseError";
      }
    };
    exports.UnexpectedResponseError = UnexpectedResponseError;
    var ClientError = class extends Error {
      constructor(message) {
        super(message);
        this.name = "FbClientError";
      }
    };
    exports.ClientError = ClientError;
    var TimeoutError = class extends Error {
      constructor(message) {
        super(message);
        this.name = "FeatBitTimeoutError";
      }
    };
    exports.TimeoutError = TimeoutError;
    function isHttpRecoverable(status) {
      if (status >= 400 && status < 500) {
        return status === 400 || status === 408 || status === 429;
      }
      return true;
    }
    exports.isHttpRecoverable = isHttpRecoverable;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/sleep.js
var require_sleep = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/sleep.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var sleep = (delayMillis = 1e3) => __awaiter4(void 0, void 0, void 0, function* () {
      return new Promise((resolve) => {
        setTimeout(resolve, delayMillis);
      });
    });
    exports.default = sleep;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventSender.js
var require_DefaultEventSender = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventSender.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultEventSender = void 0;
    var IEventSender_1 = require_IEventSender();
    var http_1 = require_http();
    var errors_1 = require_errors();
    var sleep_1 = __importDefault(require_sleep());
    var DefaultEventSender = class {
      constructor(clientContext) {
        const { sdkKey, eventsUri, platform } = clientContext;
        const { info, requests } = platform;
        this.defaultHeaders = (0, http_1.defaultHeaders)(sdkKey, info);
        this.eventsUri = eventsUri;
        this.requests = requests;
      }
      send(payload, retry) {
        return __awaiter4(this, void 0, void 0, function* () {
          const res = {
            status: IEventSender_1.DeliveryStatus.Succeeded
          };
          const headers = Object.assign({}, this.defaultHeaders);
          let error;
          try {
            const { status } = yield this.requests.fetch(this.eventsUri, {
              headers,
              body: payload,
              method: "POST"
            });
            if (status >= 200 && status <= 299) {
              return res;
            }
            error = new errors_1.UnexpectedResponseError((0, http_1.httpErrorMessage)({ status, message: "some events were dropped" }, "event posting"));
            if (!(0, errors_1.isHttpRecoverable)(status)) {
              res.status = IEventSender_1.DeliveryStatus.FailedAndMustShutDown;
              res.error = error;
              return res;
            }
          } catch (err) {
            error = err;
          }
          if (error && !retry) {
            res.status = IEventSender_1.DeliveryStatus.Failed;
            res.error = error;
            return res;
          }
          yield (0, sleep_1.default)();
          return this.send(payload, false);
        });
      }
    };
    exports.DefaultEventSender = DefaultEventSender;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventSerializer.js
var require_DefaultEventSerializer = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventSerializer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultEventSerializer = void 0;
    var event_1 = require_event();
    var DefaultEventSerializer = class {
      serialize(events) {
        const payload = events.map((event) => event instanceof event_1.EvalEvent || event instanceof event_1.MetricEvent ? event.toPayload() : null).filter((event) => event !== null);
        return JSON.stringify(payload);
      }
    };
    exports.DefaultEventSerializer = DefaultEventSerializer;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/EventDispatcher.js
var require_EventDispatcher = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/EventDispatcher.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EventDispatcher = void 0;
    var IEventSender_1 = require_IEventSender();
    var DefaultEventQueue_1 = require_DefaultEventQueue();
    var DefaultEventSender_1 = require_DefaultEventSender();
    var event_1 = require_event();
    var DefaultEventSerializer_1 = require_DefaultEventSerializer();
    var sleep_1 = __importDefault(require_sleep());
    var EventDispatcher = class {
      constructor(clientContext, queue) {
        this.maxEventPerRequest = 50;
        this.stopped = false;
        const { logger, maxEventsInQueue } = clientContext;
        this.logger = logger;
        this.buffer = new DefaultEventQueue_1.DefaultEventQueue(maxEventsInQueue, this.logger);
        this.sender = new DefaultEventSender_1.DefaultEventSender(clientContext);
        this.serializer = new DefaultEventSerializer_1.DefaultEventSerializer();
        this.dispatchLoop(queue).then();
      }
      dispatchLoop(queue) {
        return __awaiter4(this, void 0, void 0, function* () {
          this.logger.debug("Start dispatch loop.");
          let running = true;
          while (running) {
            try {
              const event = queue.shift();
              if (event === void 0) {
                yield (0, sleep_1.default)(1e3);
                continue;
              }
              if (event instanceof event_1.PayloadEvent) {
                this.addEventToBuffer(event);
              } else if (event instanceof event_1.FlushEvent) {
                yield this.triggerFlush(event);
              } else if (event instanceof event_1.ShutdownEvent) {
                yield this.triggerFlush(event);
                this.stopped = true;
                running = false;
              }
            } catch (err) {
              this.logger.error("Unexpected error in event dispatcher.", err);
            }
          }
          this.logger.debug("Finish dispatch loop.");
        });
      }
      addEventToBuffer(event) {
        if (this.stopped) {
          return;
        }
        if (this.buffer.addEvent(event)) {
          this.logger.debug("Added event to buffer.");
        } else {
          this.logger.warn("Exceeded event queue capacity, event will be dropped. Increase capacity to avoid dropping events.");
        }
      }
      triggerFlush(event) {
        return __awaiter4(this, void 0, void 0, function* () {
          if (this.stopped) {
            event.complete();
            return;
          }
          if (this.buffer.isEmpty) {
            event.complete();
            this.logger.debug("Flush empty buffer.");
            return;
          }
          const snapshot = this.buffer.eventsSnapshot;
          this.buffer.clear();
          try {
            yield this.flushEvents(snapshot);
            this.logger.debug(`${snapshot.length} events has been flushed.`);
          } catch (err) {
            this.logger.warn("Exception happened when flushing events", err);
          }
          event.complete();
        });
      }
      flushEvents(events) {
        return __awaiter4(this, void 0, void 0, function* () {
          events = this.getUniqueEvents(events);
          const total = events.length;
          for (let i = 0; i < total; i += this.maxEventPerRequest) {
            const length = Math.min(this.maxEventPerRequest, total - i);
            const slice = events.slice(i, i + length);
            const payload = this.serializer.serialize(slice);
            const { status } = yield this.sender.send(payload, true);
            if (status === IEventSender_1.DeliveryStatus.FailedAndMustShutDown) {
              this.stopped = true;
            }
          }
        });
      }
      getUniqueEvents(events) {
        const uniqueEvents = [];
        const hashes = [];
        for (const event of events) {
          if (!hashes.includes(event.hash)) {
            uniqueEvents.push(event);
            hashes.push(event.hash);
          }
        }
        return uniqueEvents;
      }
    };
    exports.EventDispatcher = EventDispatcher;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventProcessor.js
var require_DefaultEventProcessor = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/DefaultEventProcessor.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultEventProcessor = void 0;
    var EventDispatcher_1 = require_EventDispatcher();
    var event_1 = require_event();
    var isNullOrUndefined_1 = require_isNullOrUndefined();
    var DefaultEventQueue_1 = require_DefaultEventQueue();
    var DefaultEventProcessor = class {
      constructor(clientContext) {
        this.closed = false;
        const { logger, flushInterval, maxEventsInQueue } = clientContext;
        this.logger = logger;
        this.flushInterval = flushInterval;
        this.eventQueue = new DefaultEventQueue_1.DefaultEventQueue(maxEventsInQueue, this.logger);
        this.eventDispatcher = new EventDispatcher_1.EventDispatcher(clientContext, this.eventQueue);
        this.flushLoop();
      }
      flushLoop() {
        if (this.closed) {
          return;
        }
        setTimeout(() => __awaiter4(this, void 0, void 0, function* () {
          try {
            yield this.flush();
          } catch (err) {
            this.logger.error("Unexpected error while flushing events in event processor.", err);
          }
          this.flushLoop();
        }), this.flushInterval);
      }
      flush() {
        const flushEvent = new event_1.FlushEvent();
        this.record(flushEvent);
        return flushEvent.waitForCompletion();
      }
      close() {
        return __awaiter4(this, void 0, void 0, function* () {
          if (this.closed) {
            return;
          }
          const shutdown = new event_1.ShutdownEvent();
          this.record(shutdown);
          try {
            yield shutdown.waitForCompletion();
          } catch (err) {
            this.logger.error("Event processor shutdown but not complete.");
          }
          this.eventQueue.close();
          this.closed = true;
        });
      }
      record(event) {
        if ((0, isNullOrUndefined_1.isNullOrUndefined)(event)) {
          return false;
        }
        if (!this.eventQueue.addEvent(event)) {
          if (event instanceof event_1.FlushEvent) {
            event.complete();
          }
          return false;
        }
        return true;
      }
    };
    exports.DefaultEventProcessor = DefaultEventProcessor;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/EventSerializer.js
var require_EventSerializer = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/EventSerializer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/IEventProcessor.js
var require_IEventProcessor = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/IEventProcessor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/IEventQueue.js
var require_IEventQueue = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/IEventQueue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/NullEventProcessor.js
var require_NullEventProcessor = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/NullEventProcessor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NullEventProcessor = void 0;
    var NullEventProcessor = class {
      flush() {
        return Promise.resolve();
      }
      close() {
        return Promise.resolve();
      }
      record(event) {
        return false;
      }
    };
    exports.NullEventProcessor = NullEventProcessor;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/events/index.js
var require_events = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/events/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_DefaultEventProcessor(), exports);
    __exportStar(require_DefaultEventQueue(), exports);
    __exportStar(require_DefaultEventSender(), exports);
    __exportStar(require_DefaultEventSerializer(), exports);
    __exportStar(require_event(), exports);
    __exportStar(require_EventDispatcher(), exports);
    __exportStar(require_EventSerializer(), exports);
    __exportStar(require_IEventProcessor(), exports);
    __exportStar(require_IEventQueue(), exports);
    __exportStar(require_IEventSender(), exports);
    __exportStar(require_NullEventProcessor(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/OptionMessages.js
var require_OptionMessages = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/OptionMessages.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var OptionMessages = class {
      static optionBelowMinimum(name, value, min) {
        return `Config option "${name}" had invalid value of ${value}, using minimum of ${min} instead`;
      }
      static unknownOption(name) {
        return `Ignoring unknown config option "${name}"`;
      }
      static wrongOptionType(name, expectedType, actualType) {
        return `Config option "${name}" should be of type ${expectedType}, got ${actualType}, using default value`;
      }
      static wrongOptionTypeBoolean(name, actualType) {
        return `Config option "${name}" should be a boolean, got ${actualType}, converting to boolean`;
      }
      static partialEndpoint(name) {
        return `You have set custom uris without specifying the ${name} URI; connections may not work properly`;
      }
      static mandatory(name) {
        return `${name} is mandatory`;
      }
      static invalidOptionValue(name) {
        return `Invalid option value: ${name}`;
      }
      static missingKeyInBootstrapValue(key) {
        return `Missing key "${key}" in bootstrap value`;
      }
    };
    exports.default = OptionMessages;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/Validators.js
var require_Validators = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/Validators.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TypeValidators = exports.KindValidator = exports.DateValidator = exports.UserValidator = exports.BootstrapValidator = exports.NullableBoolean = exports.Function = exports.StringMatchingRegex = exports.NumberWithMinimum = exports.TypeArray = exports.Type = exports.FactoryOrInstance = void 0;
    var OptionMessages_1 = __importDefault(require_OptionMessages());
    var FactoryOrInstance = class {
      is(factoryOrInstance) {
        if (Array.isArray(factoryOrInstance)) {
          return false;
        }
        const anyFactory = factoryOrInstance;
        const typeOfFactory = typeof anyFactory;
        return typeOfFactory === "function" || typeOfFactory === "object";
      }
      getType() {
        return "factory method or object";
      }
    };
    exports.FactoryOrInstance = FactoryOrInstance;
    var Type = class {
      constructor(typeName, example) {
        this.typeName = typeName;
        this.typeOf = typeof example;
      }
      is(u) {
        if (Array.isArray(u)) {
          return false;
        }
        return typeof u === this.typeOf;
      }
      getType() {
        return this.typeName;
      }
    };
    exports.Type = Type;
    var TypeArray = class {
      constructor(typeName, example) {
        this.typeName = typeName;
        this.typeOf = typeof example;
      }
      is(u) {
        if (Array.isArray(u)) {
          if (u.length > 0) {
            return u.every((val) => typeof val === this.typeOf);
          }
          return true;
        }
        return false;
      }
      getType() {
        return this.typeName;
      }
    };
    exports.TypeArray = TypeArray;
    var NumberWithMinimum = class extends Type {
      constructor(min) {
        super(`number with minimum value of ${min}`, 0);
        this.min = min;
      }
      is(u) {
        return typeof u === this.typeOf && u >= this.min;
      }
    };
    exports.NumberWithMinimum = NumberWithMinimum;
    var StringMatchingRegex = class extends Type {
      constructor(expression) {
        super(`string matching ${expression}`, "");
        this.expression = expression;
      }
      is(u) {
        return !!u.match(this.expression);
      }
    };
    exports.StringMatchingRegex = StringMatchingRegex;
    var Function2 = class {
      is(u) {
        return typeof u === "function";
      }
      getType() {
        return "function";
      }
    };
    exports.Function = Function2;
    var NullableBoolean = class {
      is(u) {
        return typeof u === "boolean" || typeof u === "undefined" || u === null;
      }
      getType() {
        return "boolean | undefined | null";
      }
    };
    exports.NullableBoolean = NullableBoolean;
    var BootstrapValidator = class {
      constructor() {
        this.messages = [];
      }
      is(u) {
        if (typeof u !== "object" || u === null) {
          this.messages.push(OptionMessages_1.default.invalidOptionValue("bootstrap"));
          return false;
        }
        try {
          const bootstrap = u;
          for (let flag of bootstrap) {
            const hasMandatoryKeys = ["id", "variation"].every((key) => Object.keys(flag).includes(key));
            const keys = Object.keys(flag);
            if (keys.includes("id")) {
              this.messages.push(OptionMessages_1.default.missingKeyInBootstrapValue("id"));
            }
            if (keys.includes("variation")) {
              this.messages.push(OptionMessages_1.default.missingKeyInBootstrapValue("variation"));
            }
            if (this.messages.length > 0) {
              return false;
            }
          }
        } catch (_) {
          this.messages.push(OptionMessages_1.default.wrongOptionType("bootstrap", this.getType(), typeof u));
          return false;
        }
        return true;
      }
      getType() {
        return "IFlagBase[]";
      }
    };
    exports.BootstrapValidator = BootstrapValidator;
    var UserValidator = class {
      constructor() {
        this.messages = [];
      }
      is(u) {
        if (typeof u !== "object" || u === null) {
          this.messages.push(OptionMessages_1.default.mandatory("user"));
          return false;
        }
        const user = u;
        if (typeof user.keyId !== "string" || user.keyId.trim() === "") {
          this.messages.push(OptionMessages_1.default.mandatory("user.keyId"));
          return false;
        }
        if (typeof user.name !== "string" || user.name.trim() === "") {
          this.messages.push(OptionMessages_1.default.mandatory("user.name"));
          return false;
        }
        return true;
      }
      getType() {
        return "user";
      }
    };
    exports.UserValidator = UserValidator;
    var DATE_REGEX = /^\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d(\.\d\d*)?(Z|[-+]\d\d(:\d\d)?)/;
    var DateValidator = class {
      is(u) {
        return typeof u === "number" || typeof u === "string" && DATE_REGEX.test(u);
      }
      getType() {
        return "date";
      }
    };
    exports.DateValidator = DateValidator;
    var KindValidator = class extends StringMatchingRegex {
      constructor() {
        super(/^(\w|\.|-)+$/);
      }
      is(u) {
        return super.is(u) && u !== "kind";
      }
    };
    exports.KindValidator = KindValidator;
    var TypeValidators = class {
      static createTypeArray(typeName, example) {
        return new TypeArray(typeName, example);
      }
      static numberWithMin(min) {
        return new NumberWithMinimum(min);
      }
      static stringMatchingRegex(expression) {
        return new StringMatchingRegex(expression);
      }
    };
    exports.TypeValidators = TypeValidators;
    TypeValidators.String = new Type("string", "");
    TypeValidators.Number = new Type("number", 0);
    TypeValidators.ObjectOrFactory = new FactoryOrInstance();
    TypeValidators.Object = new Type("object", {});
    TypeValidators.StringArray = new TypeArray("string[]", "");
    TypeValidators.Boolean = new Type("boolean", true);
    TypeValidators.User = new Type("object", {});
    TypeValidators.Bootstrap = new Type("object", {});
    TypeValidators.Function = new Function2();
    TypeValidators.Date = new DateValidator();
    TypeValidators.Kind = new KindValidator();
    TypeValidators.NullableBoolean = new NullableBoolean();
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/logging/format.js
var require_format = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/logging/format.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Validators_1 = require_Validators();
    function tryStringify(val) {
      if (typeof val === "string") {
        return val;
      }
      if (val === void 0) {
        return "undefined";
      }
      if (val === null) {
        return "null";
      }
      if (Object.prototype.hasOwnProperty.call(val, "toString")) {
        try {
          return val.toString();
        } catch (_a) {
        }
      }
      if (typeof val === "bigint") {
        return `${val}n`;
      }
      try {
        return JSON.stringify(val);
      } catch (error) {
        if (error instanceof TypeError && error.message.indexOf("circular") >= 0) {
          return "[Circular]";
        }
        return "[Not Stringifiable]";
      }
    }
    function toNumber(val) {
      if (typeof val === "symbol") {
        return "NaN";
      }
      if (typeof val === "bigint") {
        return `${val}n`;
      }
      return String(Number(val));
    }
    function toInt(val) {
      if (typeof val === "symbol") {
        return "NaN";
      }
      if (typeof val === "bigint") {
        return `${val}n`;
      }
      return String(parseInt(val, 10));
    }
    function toFloat(val) {
      if (typeof val === "symbol") {
        return "NaN";
      }
      return String(parseFloat(val));
    }
    var escapes = {
      s: (val) => tryStringify(val),
      d: (val) => toNumber(val),
      i: (val) => toInt(val),
      f: (val) => toFloat(val),
      j: (val) => tryStringify(val),
      o: (val) => tryStringify(val),
      O: (val) => tryStringify(val),
      c: () => ""
    };
    function format(...args) {
      var _a;
      const formatString = args.shift();
      if (Validators_1.TypeValidators.String.is(formatString)) {
        let out = "";
        let i = 0;
        while (i < formatString.length) {
          const char = formatString.charAt(i);
          if (char === "%") {
            const nextIndex = i + 1;
            if (nextIndex < formatString.length) {
              const nextChar = formatString.charAt(i + 1);
              if (nextChar in escapes && args.length) {
                const value = args.shift();
                out += (_a = escapes[nextChar]) === null || _a === void 0 ? void 0 : _a.call(escapes, value);
              } else if (nextChar === "%") {
                out += "%";
              } else {
                out += `%${nextChar}`;
              }
              i += 2;
            }
          } else {
            out += char;
            i += 1;
          }
        }
        if (args.length) {
          if (out.length) {
            out += " ";
          }
          out += args.map(tryStringify).join(" ");
        }
        return out;
      }
      return args.map(tryStringify).join(" ");
    }
    exports.default = format;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/logging/BasicLogger.js
var require_BasicLogger = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/logging/BasicLogger.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BasicLogger = void 0;
    var format_1 = __importDefault(require_format());
    var LogPriority = {
      debug: 0,
      info: 1,
      warn: 2,
      error: 3,
      none: 4
    };
    var LevelNames = ["debug", "info", "warn", "error", "none"];
    var BasicLogger = class _BasicLogger {
      /**
       * This should only be used as a default fallback and not as a convenient
       * solution. In most cases you should construct a new instance with the
       * appropriate options for your specific needs.
       */
      static get() {
        return new _BasicLogger({});
      }
      constructor(options) {
        var _a, _b, _c;
        this.logLevel = (_b = LogPriority[(_a = options.level) !== null && _a !== void 0 ? _a : "info"]) !== null && _b !== void 0 ? _b : LogPriority.info;
        this.name = (_c = options.name) !== null && _c !== void 0 ? _c : "FeatBit";
        this.destination = options.destination;
        this.formatter = options.formatter;
      }
      tryFormat(...args) {
        var _a;
        try {
          if (this.formatter) {
            return (_a = this.formatter) === null || _a === void 0 ? void 0 : _a.call(this, ...args);
          }
          return (0, format_1.default)(...args);
        } catch (_b) {
          return (0, format_1.default)(...args);
        }
      }
      tryWrite(msg) {
        try {
          this.destination(msg);
        } catch (_a) {
          console.error(msg);
        }
      }
      log(level, args) {
        if (level >= this.logLevel) {
          const prefix = `${LevelNames[level]}: [${this.name}]`;
          try {
            if (this.destination) {
              this.tryWrite(`${prefix} ${this.tryFormat(...args)}`);
            } else {
              console.error(...args);
            }
          } catch (_a) {
            console.error(...args);
          }
        }
      }
      error(...args) {
        this.log(LogPriority.error, args);
      }
      warn(...args) {
        this.log(LogPriority.warn, args);
      }
      info(...args) {
        this.log(LogPriority.info, args);
      }
      debug(...args) {
        this.log(LogPriority.debug, args);
      }
    };
    exports.BasicLogger = BasicLogger;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/logging/IBasicLoggerOptions.js
var require_IBasicLoggerOptions = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/logging/IBasicLoggerOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/logging/ILogger.js
var require_ILogger = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/logging/ILogger.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/logging/LogLevel.js
var require_LogLevel = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/logging/LogLevel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/logging/SafeLogger.js
var require_SafeLogger = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/logging/SafeLogger.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SafeLogger = void 0;
    var Validators_1 = require_Validators();
    var loggerRequirements = {
      error: Validators_1.TypeValidators.Function,
      warn: Validators_1.TypeValidators.Function,
      info: Validators_1.TypeValidators.Function,
      debug: Validators_1.TypeValidators.Function
    };
    var SafeLogger = class {
      /**
       * Construct a safe logger with the specified logger.
       * @param logger The logger to use.
       * @param fallback A fallback logger to use in case an issue is  encountered using
       * the provided logger.
       */
      constructor(logger, fallback) {
        Object.entries(loggerRequirements).forEach(([level, validator]) => {
          if (!validator.is(logger[level])) {
            throw new Error(`Provided logger instance must support logger.${level}(...) method`);
          }
        });
        this.logger = logger;
        this.fallback = fallback;
      }
      log(level, args) {
        try {
          this.logger[level](...args);
        } catch (_a) {
          this.fallback[level](...args);
        }
      }
      error(...args) {
        this.log("error", args);
      }
      warn(...args) {
        this.log("warn", args);
      }
      info(...args) {
        this.log("info", args);
      }
      debug(...args) {
        this.log("debug", args);
      }
    };
    exports.SafeLogger = SafeLogger;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/logging/index.js
var require_logging = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/logging/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_BasicLogger(), exports);
    __exportStar(require_format(), exports);
    __exportStar(require_IBasicLoggerOptions(), exports);
    __exportStar(require_ILogger(), exports);
    __exportStar(require_LogLevel(), exports);
    __exportStar(require_SafeLogger(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/ClientContext.js
var require_ClientContext = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/ClientContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ClientContext = class {
      constructor(sdkKey, configuration, platform) {
        this.sdkKey = sdkKey;
        this.platform = platform;
        this.logger = configuration.logger;
        this.offline = configuration.offline;
        this.flushInterval = configuration.flushInterval;
        this.maxEventsInQueue = configuration.maxEventsInQueue;
        this.streamingUri = configuration.streamingUri;
        this.pollingUri = configuration.pollingUri;
        this.eventsUri = configuration.eventsUri;
      }
    };
    exports.default = ClientContext;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/IClientContext.js
var require_IClientContext = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/IClientContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/IOptions.js
var require_IOptions = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/IOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/IUser.js
var require_IUser = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/IUser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/IValidatedOptions.js
var require_IValidatedOptions = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/IValidatedOptions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/UserBuilder.js
var require_UserBuilder = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/UserBuilder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserBuilder = void 0;
    var UserBuilder = class {
      constructor(keyId) {
        this._keyId = "";
        this._name = "";
        this._custom = [];
        this._keyId = keyId;
      }
      name(name) {
        this._name = name;
        return this;
      }
      custom(propertyName, value) {
        var _a;
        (_a = this._custom) === null || _a === void 0 ? void 0 : _a.push({ name: propertyName, value: `${value}` });
        return this;
      }
      build() {
        return {
          name: this._name,
          keyId: this._keyId,
          customizedProperties: this._custom
        };
      }
    };
    exports.UserBuilder = UserBuilder;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/options/index.js
var require_options = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/options/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_ClientContext(), exports);
    __exportStar(require_IClientContext(), exports);
    __exportStar(require_IOptions(), exports);
    __exportStar(require_IUser(), exports);
    __exportStar(require_IValidatedOptions(), exports);
    __exportStar(require_OptionMessages(), exports);
    __exportStar(require_UserBuilder(), exports);
    __exportStar(require_Validators(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/IInfo.js
var require_IInfo = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/IInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/IStore.js
var require_IStore = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/IStore.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/IPlatform.js
var require_IPlatform = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/IPlatform.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/IWebSocket.js
var require_IWebSocket = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/IWebSocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/requests.js
var require_requests = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/requests.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserRequests.js
var require_BrowserRequests = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserRequests.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRequests = void 0;
    var BrowserRequests = class {
      fetch(url, options = {}) {
        return fetch(url, options);
      }
    };
    exports.BrowserRequests = BrowserRequests;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/Emits.js
var require_Emits = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/Emits.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Emits = void 0;
    function Emits(Base) {
      return class WithEvents extends Base {
        on(eventName, listener, context2) {
          this.emitter.on(eventName, listener, context2);
          return this;
        }
        addListener(eventName, listener, context2) {
          this.emitter.addListener(eventName, listener, context2);
          return this;
        }
        once(eventName, listener, context2) {
          this.emitter.once(eventName, listener, context2);
          return this;
        }
        removeListener(eventName, listener, context2) {
          this.emitter.removeListener(eventName, listener, context2);
          return this;
        }
        off(eventName, listener, context2) {
          this.emitter.off(eventName, listener, context2);
          return this;
        }
        removeAllListeners(event) {
          this.emitter.removeAllListeners(event);
          return this;
        }
        listeners(eventName) {
          return this.emitter.listeners(eventName);
        }
        emit(eventName, ...args) {
          this.emitter.emit(eventName, args);
          return this;
        }
        listenerCount(eventName) {
          return this.emitter.listenerCount(eventName);
        }
        prependListener(eventName, listener, context2) {
          this.emitter.prependListener(eventName, listener, context2);
          return this;
        }
        prependOnceListener(eventName, listener, context2) {
          this.emitter.prependOnceListener(eventName, listener, context2);
          return this;
        }
        eventNames() {
          return this.emitter.eventNames();
        }
        maybeReportError(error) {
          this.emitter.maybeReportError(error);
          return this;
        }
      };
    }
    exports.Emits = Emits;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/EventEmitter.js
var require_EventEmitter = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/EventEmitter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EventEmitter = void 0;
    var EventEmitter = class {
      constructor(logger) {
        this.logger = logger;
        this.events = {};
      }
      listeningTo(event) {
        return !!this.events[event];
      }
      on(event, handler, context2) {
        this.events[event] = this.events[event] || [];
        this.events[event] = this.events[event].concat({
          handler,
          context: context2
        });
        return this;
      }
      addListener(event, handler, context2) {
        return this.on(event, handler, context2);
      }
      once(event, handler, context2) {
        const onceHandler = (...args) => {
          this.off(event, onceHandler, context2);
          handler.apply(context2, args);
        };
        return this.on(event, onceHandler, context2);
      }
      off(event, handler, context2) {
        if (!this.events[event]) {
          return this;
        }
        for (let i = 0; i < this.events[event].length; i++) {
          if (this.events[event][i].handler === handler && this.events[event][i].context === context2) {
            this.events[event] = this.events[event].slice(0, i).concat(this.events[event].slice(i + 1));
          }
        }
        return this;
      }
      removeListener(event, handler, context2) {
        return this.off(event, handler, context2);
      }
      removeAllListeners(event) {
        if (event) {
          delete this.events[event];
        } else {
          this.events = {};
        }
        return this;
      }
      listeners(event) {
        return this.events[event] ? this.events[event].map((event2) => event2.handler) : [];
      }
      emit(event, ...args) {
        if (!this.events[event]) {
          return this;
        }
        const copiedHandlers = [...this.events[event]];
        for (let i = 0; i < copiedHandlers.length; i++) {
          copiedHandlers[i].handler.apply(copiedHandlers[i].context, Array.prototype.slice.call(arguments, 1));
        }
        return this;
      }
      listenerCount(event) {
        return this.events[event] ? this.events[event].length : 0;
      }
      prependListener(event, handler, context2) {
        this.events[event] = this.events[event] || [];
        this.events[event] = [
          {
            handler,
            context: context2
          },
          ...this.events[event]
        ];
        return this;
      }
      prependOnceListener(event, handler, context2) {
        const onceHandler = (...args) => {
          this.off(event, onceHandler, context2);
          handler.apply(context2, args);
        };
        return this.prependListener(event, onceHandler, context2);
      }
      eventNames() {
        return Object.keys(this.events);
      }
      maybeReportError(error) {
        var _a;
        if (!error) {
          return this;
        }
        if (this.listeningTo("error")) {
          this.emit("error", error);
        } else {
          (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error(error);
        }
        return this;
      }
    };
    exports.EventEmitter = EventEmitter;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/utils.js
var require_utils = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generateConnectionToken = void 0;
    var alphabet = {
      "0": "Q",
      "1": "B",
      "2": "W",
      "3": "S",
      "4": "P",
      "5": "H",
      "6": "D",
      "7": "X",
      "8": "Z",
      "9": "U"
    };
    function encodeNumber(param, length) {
      var s = "000000000000" + param;
      const numberWithLeadingZeros = s.slice(s.length - length);
      return numberWithLeadingZeros.split("").map((n) => alphabet[n]).join("");
    }
    function generateConnectionToken(text) {
      text = text.replace(/=*$/, "");
      const timestamp = Date.now();
      const timestampCode = encodeNumber(timestamp, timestamp.toString().length);
      const start = Math.max(Math.floor(Math.random() * text.length), 2);
      return `${encodeNumber(start, 3)}${encodeNumber(timestampCode.length, 2)}${text.slice(0, start)}${timestampCode}${text.slice(start)}`;
    }
    exports.generateConnectionToken = generateConnectionToken;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/types.js
var require_types = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StreamResponseEventType = void 0;
    var StreamResponseEventType;
    (function(StreamResponseEventType2) {
      StreamResponseEventType2["full"] = "full";
      StreamResponseEventType2["patch"] = "patch";
    })(StreamResponseEventType || (exports.StreamResponseEventType = StreamResponseEventType = {}));
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserWebSocket.js
var require_BrowserWebSocket = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserWebSocket.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Emits_1 = require_Emits();
    var EventEmitter_1 = require_EventEmitter();
    var utils_1 = require_utils();
    var types_1 = require_types();
    var socketConnectionIntervals = [1e3, 3e3, 5e3, 7e3, 11e3, 13e3, 3e4, 6e4];
    var BrowserWebSocket = class {
      constructor() {
        this.retryCounter = 0;
        this.closed = false;
        this._config = {};
        this.emitter = new EventEmitter_1.EventEmitter();
      }
      identify(user) {
        this._config.user = user;
        this.doDataSync();
      }
      connect() {
        var _a, _b, _c, _d;
        let that = this;
        const startTime = Date.now();
        const url = this._config.streamingUri.replace(/^http/, "ws") + `?type=client&token=${(0, utils_1.generateConnectionToken)(this._config.sdkKey)}`;
        this.ws = new WebSocket(url);
        (_a = that.ws) === null || _a === void 0 ? void 0 : _a.addEventListener("open", function(event) {
          that._config.logger.info(`WebSocket connection succeeded, connection time: ${Date.now() - startTime} ms`);
          that.doDataSync();
          that.sendPingMessage();
        });
        (_b = that.ws) === null || _b === void 0 ? void 0 : _b.addEventListener("close", function(event) {
          that._config.logger.warn("WebSocket closed");
          if (event.code === 4003) {
            return;
          }
          that.reconnect();
        });
        (_c = that.ws) === null || _c === void 0 ? void 0 : _c.addEventListener("error", function(event) {
          that._config.logger.debug("error");
        });
        (_d = that.ws) === null || _d === void 0 ? void 0 : _d.addEventListener("message", function(event) {
          const message = JSON.parse(event.data);
          if (message.messageType === "data-sync") {
            switch (message.data.eventType) {
              case types_1.StreamResponseEventType.patch:
                that.emitter.emit("patch", message);
                break;
              case types_1.StreamResponseEventType.full:
                that.emitter.emit("put", message);
                break;
            }
          }
        });
      }
      close() {
        var _a;
        this.closed = true;
        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close(4003, "The client is closed by user");
        this.ws = void 0;
      }
      config(param) {
        if (param.emitter) {
          this.emitter = param.emitter;
        }
        this._config = Object.assign({}, param);
      }
      sendPingMessage() {
        const payload = {
          messageType: "ping",
          data: null
        };
        setTimeout(() => {
          var _a;
          try {
            if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === WebSocket.OPEN) {
              this._config.logger.debug("sending ping");
              this.ws.send(JSON.stringify(payload));
              this.sendPingMessage();
            } else {
              this._config.logger.debug(`socket closed at ${/* @__PURE__ */ new Date()}`);
            }
          } catch (err) {
            this._config.logger.debug(err);
          }
        }, this._config.pingInterval);
      }
      doDataSync() {
        var _a, _b;
        const payload = {
          messageType: "data-sync",
          data: {
            timestamp: this._config.getStoreTimestamp(),
            user: this._config.user
          }
        };
        try {
          if (((_a = this.ws) === null || _a === void 0 ? void 0 : _a.readyState) === WebSocket.OPEN) {
            this._config.logger.debug("requesting data");
            (_b = this.ws) === null || _b === void 0 ? void 0 : _b.send(JSON.stringify(payload));
          } else {
            this._config.logger.error(`not requesting data because socket not open`);
          }
        } catch (err) {
          this._config.logger.debug(err);
        }
      }
      reconnect() {
        if (!this.closed) {
          this.ws = void 0;
          const waitTime = socketConnectionIntervals[Math.min(this.retryCounter++, socketConnectionIntervals.length - 1)];
          this._config.logger.info(`The client will try to reconnect in ${waitTime} milliseconds.`);
          setTimeout(() => {
            this._config.logger.info(`The client is trying to reconnect, flag evaluation results may be stale until reconnected, waited for: ${waitTime} milliseconds`);
            this.connect();
          }, waitTime);
        }
      }
    };
    exports.default = (0, Emits_1.Emits)(BrowserWebSocket);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/index.js
var require_platform = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserWebSocket = void 0;
    __exportStar(require_IInfo(), exports);
    __exportStar(require_IStore(), exports);
    __exportStar(require_IPlatform(), exports);
    __exportStar(require_IWebSocket(), exports);
    __exportStar(require_requests(), exports);
    __exportStar(require_BrowserRequests(), exports);
    var BrowserWebSocket_1 = __importDefault(require_BrowserWebSocket());
    exports.BrowserWebSocket = BrowserWebSocket_1.default;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/store/IDataSourceUpdates.js
var require_IDataSourceUpdates = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/store/IDataSourceUpdates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/store/store.js
var require_store = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/store/store.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CurrentUserStorageKey = exports.StoreStorageKey = void 0;
    exports.StoreStorageKey = "fb-datastore";
    exports.CurrentUserStorageKey = "fb-user";
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/store/BaseStore.js
var require_BaseStore = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/store/BaseStore.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BaseStore = void 0;
    var BaseStore = class {
      constructor() {
        this.store = {};
        this.initCalled = false;
        this._user = {};
      }
      identify(user) {
        return __awaiter4(this, void 0, void 0, function* () {
          this._user = Object.assign({}, user);
          yield this.saveUser();
          yield this.loadStoreFromStorage();
        });
      }
      get user() {
        return this._user;
      }
      addItem(kind, key, item) {
        return __awaiter4(this, void 0, void 0, function* () {
          let items = this.store[kind.namespace];
          if (!items) {
            items = {};
            this.store[kind.namespace] = items;
          }
          if (Object.hasOwnProperty.call(items, key)) {
            const old = items[key];
            if (!old || old.version <= item.version) {
              items[key] = item;
            }
          } else {
            items[key] = item;
          }
          if (item.version > this.store.version) {
            this.store.version = item.version;
          }
          yield this.dumpStoreToStorage();
        });
      }
      get(kind, key) {
        const items = this.store[kind.namespace];
        if (items) {
          if (Object.prototype.hasOwnProperty.call(items, key)) {
            const item = items[key];
            if (item) {
              return item;
            }
          }
        }
        return null;
      }
      all(kind) {
        var _a;
        const result = {};
        const items = (_a = this.store[kind.namespace]) !== null && _a !== void 0 ? _a : {};
        Object.entries(items).forEach(([key, item]) => {
          if (item) {
            result[key] = item;
          }
        });
        return [result, this.store.version];
      }
      init(allData) {
        return __awaiter4(this, void 0, void 0, function* () {
          this.store = allData;
          Object.keys(allData).map((namespace) => {
            Object.entries(allData[namespace]).forEach(([_, item]) => {
              const ele = item;
              if (ele.version > this.store.version) {
                this.store.version = ele.version;
              }
            });
          });
          yield this.dumpStoreToStorage();
          this.initCalled = true;
        });
      }
      upsert(kind, data) {
        return __awaiter4(this, void 0, void 0, function* () {
          yield this.addItem(kind, data.key, data);
        });
      }
      initialized() {
        return this.initCalled;
      }
      /* eslint-disable class-methods-use-this */
      close() {
      }
      get version() {
        return this.store.version;
      }
      // This getter needs to be overridden in the child class
      get description() {
        return "";
      }
      // This method needs to be overridden in the child class
      saveUser() {
        return __awaiter4(this, void 0, void 0, function* () {
        });
      }
      // This method needs to be overridden in the child class
      loadStoreFromStorage() {
        return __awaiter4(this, void 0, void 0, function* () {
        });
      }
      // This method needs to be overridden in the child class
      dumpStoreToStorage() {
        return __awaiter4(this, void 0, void 0, function* () {
        });
      }
    };
    exports.BaseStore = BaseStore;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/store/InMemoryStore.js
var require_InMemoryStore = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/store/InMemoryStore.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var store_1 = require_store();
    var BaseStore_1 = require_BaseStore();
    var InMemoryStore = class extends BaseStore_1.BaseStore {
      constructor() {
        super();
        this.allStores = {};
      }
      /* eslint-disable class-methods-use-this */
      close() {
      }
      get description() {
        return "in-memory-store";
      }
      saveUser() {
        return __awaiter4(this, void 0, void 0, function* () {
        });
      }
      dumpStoreToStorage() {
        return __awaiter4(this, void 0, void 0, function* () {
          const storageKey = `${store_1.StoreStorageKey}-${this._user.keyId}`;
          this.allStores[storageKey] = Object.assign({}, this.store);
        });
      }
      loadStoreFromStorage() {
        var _a;
        return __awaiter4(this, void 0, void 0, function* () {
          const storageKey = `${store_1.StoreStorageKey}-${this._user.keyId}`;
          this.store = (_a = this.allStores[storageKey]) !== null && _a !== void 0 ? _a : { flags: {}, version: 0 };
        });
      }
    };
    exports.default = InMemoryStore;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/store/index.js
var require_store2 = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/store/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_DataKinds(), exports);
    __exportStar(require_IDataSourceUpdates(), exports);
    __exportStar(require_InMemoryStore(), exports);
    __exportStar(require_serialization(), exports);
    __exportStar(require_store(), exports);
    __exportStar(require_BaseStore(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/DataSyncMode.js
var require_DataSyncMode = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/DataSyncMode.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DataSyncModeEnum = void 0;
    var DataSyncModeEnum;
    (function(DataSyncModeEnum2) {
      DataSyncModeEnum2["POLLING"] = "polling";
      DataSyncModeEnum2["STREAMING"] = "streaming";
    })(DataSyncModeEnum || (exports.DataSyncModeEnum = DataSyncModeEnum = {}));
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/IDataSynchronizer.js
var require_IDataSynchronizer = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/IDataSynchronizer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/IRequestor.js
var require_IRequestor = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/IRequestor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/NullDataSynchronizer.js
var require_NullDataSynchronizer = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/NullDataSynchronizer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NullDataSynchronizer = void 0;
    var NullDataSynchronizer = class {
      close() {
      }
      start() {
      }
      stop() {
      }
      identify() {
      }
    };
    exports.NullDataSynchronizer = NullDataSynchronizer;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/PollingDataSynchronizer.js
var require_PollingDataSynchronizer = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/PollingDataSynchronizer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var errors_1 = require_errors();
    var types_1 = require_types();
    var http_1 = require_http();
    var PollingDataSynchronizer = class {
      constructor(config, requestor, getStoreTimestamp, listeners, errorHandler) {
        this.requestor = requestor;
        this.getStoreTimestamp = getStoreTimestamp;
        this.listeners = listeners;
        this.errorHandler = errorHandler;
        this.stopped = false;
        this.logger = config.logger;
        this.pollingInterval = config.pollingInterval;
        this.user = config.user;
      }
      poll() {
        var _a;
        if (this.stopped) {
          return;
        }
        const startTime = Date.now();
        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug("Polling for feature flag and segments updates");
        this.requestor.requestData(this.getStoreTimestamp(), this.user, (err, body) => {
          var _a2, _b, _c, _d, _e, _f, _g;
          const elapsed = Date.now() - startTime;
          const sleepFor = Math.max(this.pollingInterval - elapsed, 0);
          (_a2 = this.logger) === null || _a2 === void 0 ? void 0 : _a2.debug("Elapsed: %d ms, sleeping for %d ms", elapsed, sleepFor);
          if (err) {
            const { status } = err;
            if (status && !(0, errors_1.isHttpRecoverable)(status)) {
              const message = (0, http_1.httpErrorMessage)(err, "polling request");
              (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error(message);
              (_c = this.errorHandler) === null || _c === void 0 ? void 0 : _c.call(this, new errors_1.PollingError(message, status));
              return;
            }
            (_d = this.logger) === null || _d === void 0 ? void 0 : _d.warn((0, http_1.httpErrorMessage)(err, "polling request", "will retry"));
          } else {
            let featureFlags = [];
            let userKeyId = (_e = this.user) === null || _e === void 0 ? void 0 : _e.keyId;
            let processStreamResponse = this.listeners.get("patch");
            if (body) {
              const message = JSON.parse(body);
              if (message.messageType === "data-sync") {
                switch (message.data.eventType) {
                  case types_1.StreamResponseEventType.patch:
                    processStreamResponse = this.listeners.get("patch");
                    break;
                  case types_1.StreamResponseEventType.full:
                    processStreamResponse = this.listeners.get("put");
                    break;
                }
                ({ featureFlags, userKeyId } = message.data);
              }
            }
            const data = (_f = processStreamResponse === null || processStreamResponse === void 0 ? void 0 : processStreamResponse.deserializeData) === null || _f === void 0 ? void 0 : _f.call(processStreamResponse, featureFlags);
            (_g = processStreamResponse === null || processStreamResponse === void 0 ? void 0 : processStreamResponse.processJson) === null || _g === void 0 ? void 0 : _g.call(processStreamResponse, userKeyId, data);
          }
          this.timeoutHandle = setTimeout(() => {
            this.poll();
          }, sleepFor);
        });
      }
      identify(user) {
        this.user = Object.assign({}, user);
        if (this.timeoutHandle) {
          clearTimeout(this.timeoutHandle);
          this.timeoutHandle = void 0;
        }
        this.poll();
      }
      close() {
        this.stop();
      }
      start() {
        this.poll();
      }
      stop() {
        if (this.timeoutHandle) {
          clearTimeout(this.timeoutHandle);
          this.timeoutHandle = void 0;
        }
        this.stopped = true;
      }
    };
    exports.default = PollingDataSynchronizer;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/Requestor.js
var require_Requestor = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/Requestor.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var errors_1 = require_errors();
    var http_1 = require_http();
    var Requestor = class {
      constructor(sdkKey, config, info, requests) {
        this.requests = requests;
        this.headers = (0, http_1.defaultHeaders)(sdkKey, info);
        this.uri = config.pollingUri;
      }
      /**
       * Perform a request and utilize the ETag cache. The ETags are cached in the
       * requestor instance.
       */
      request(requestUrl, options) {
        return __awaiter4(this, void 0, void 0, function* () {
          const res = yield this.requests.fetch(requestUrl, options);
          const body = yield res.text();
          return { res, body };
        });
      }
      requestData(timestamp, payload, cb) {
        return __awaiter4(this, void 0, void 0, function* () {
          const options = {
            method: "POST",
            headers: this.headers,
            body: JSON.stringify(payload)
          };
          try {
            const { res, body } = yield this.request(`${this.uri}?timestamp=${timestamp !== null && timestamp !== void 0 ? timestamp : 0}`, options);
            if (res.status !== 200 && res.status !== 304) {
              const err = new errors_1.StreamingError(`Unexpected status code: ${res.status}`, res.status);
              return cb(err, void 0);
            }
            return cb(void 0, res.status === 304 ? null : body);
          } catch (err) {
            return cb(err, void 0);
          }
        });
      }
    };
    exports.default = Requestor;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/WebSocketDataSynchronizer.js
var require_WebSocketDataSynchronizer = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/WebSocketDataSynchronizer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WebSocketDataSynchronizer = class {
      constructor(sdkKey, user, clientContext, socket, getStoreTimestamp, listeners, webSocketPingInterval) {
        this.getStoreTimestamp = getStoreTimestamp;
        this.listeners = listeners;
        const { logger, streamingUri } = clientContext;
        this.logger = logger;
        this.socket = socket;
        this.socket.config({
          sdkKey,
          streamingUri,
          pingInterval: webSocketPingInterval,
          user,
          logger,
          getStoreTimestamp
        });
        this.listeners.forEach(({ deserializeData, processJson }, eventName) => {
          var _a;
          (_a = this.socket) === null || _a === void 0 ? void 0 : _a.addListener(eventName, (event) => {
            var _a2;
            (_a2 = this.logger) === null || _a2 === void 0 ? void 0 : _a2.debug(`Received ${eventName} event`);
            if (event === null || event === void 0 ? void 0 : event.data) {
              const { featureFlags, userKeyId } = event.data;
              const data = deserializeData(featureFlags);
              processJson(userKeyId, data);
            }
          });
        });
      }
      identify(user) {
        var _a;
        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.identify(user);
      }
      start() {
        var _a;
        this.logConnectionStarted();
        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.connect();
      }
      logConnectionStarted() {
        var _a;
        this.connectionAttemptStartTime = Date.now();
        (_a = this.logger) === null || _a === void 0 ? void 0 : _a.info(`Stream connection attempt StartTime ${this.connectionAttemptStartTime}`);
      }
      close() {
        this.stop();
      }
      stop() {
        var _a;
        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.close();
        this.socket = void 0;
      }
    };
    exports.default = WebSocketDataSynchronizer;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/data-sync/index.js
var require_data_sync = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/data-sync/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_DataSyncMode(), exports);
    __exportStar(require_IDataSynchronizer(), exports);
    __exportStar(require_IRequestor(), exports);
    __exportStar(require_NullDataSynchronizer(), exports);
    __exportStar(require_PollingDataSynchronizer(), exports);
    __exportStar(require_Requestor(), exports);
    __exportStar(require_types(), exports);
    __exportStar(require_utils(), exports);
    __exportStar(require_WebSocketDataSynchronizer(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/ValueConverters.js
var require_ValueConverters = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/ValueConverters.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValueConverters = void 0;
    var ValueConverters = class _ValueConverters {
      static bool(value) {
        if ((value === null || value === void 0 ? void 0 : value.toUpperCase()) === "TRUE") {
          return _ValueConverters.success(true);
        }
        if ((value === null || value === void 0 ? void 0 : value.toUpperCase()) === "FALSE") {
          return _ValueConverters.success(false);
        }
        return _ValueConverters.error();
      }
      static number(value) {
        const num = Number(value);
        if (Number.isNaN(num)) {
          return _ValueConverters.error();
        }
        return _ValueConverters.success(num);
      }
      static string(value) {
        return _ValueConverters.success(value);
      }
      static json(value) {
        try {
          const val = JSON.parse(value);
          return _ValueConverters.success(val);
        } catch (err) {
          return _ValueConverters.error();
        }
      }
      static success(value) {
        return {
          isSucceeded: true,
          value
        };
      }
      static error() {
        return {
          isSucceeded: false
        };
      }
    };
    exports.ValueConverters = ValueConverters;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/VoidFunction.js
var require_VoidFunction = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/VoidFunction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/serializeUser.js
var require_serializeUser = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/serializeUser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.serializeUser = void 0;
    function serializeUser(user) {
      var _a;
      if (!user) {
        return "";
      }
      const builtInProperties = `${user.keyId},${user.name}`;
      const customizedProperties = (_a = user.customizedProperties) === null || _a === void 0 ? void 0 : _a.sort((a, b) => {
        const nameA = a.name.toLowerCase();
        const nameB = b.name.toLowerCase();
        if (nameA < nameB) {
          return -1;
        }
        if (nameA > nameB) {
          return 1;
        }
        return 0;
      }).map((p) => `${p.name}:${p.value}`).join(",");
      return `${builtInProperties},${customizedProperties}`;
    }
    exports.serializeUser = serializeUser;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/debounce.js
var require_debounce = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/debounce.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.debounce = void 0;
    var debounce = (fn, delayMs = 5e3) => {
      let timer;
      return (...args) => {
        clearTimeout(timer);
        timer = setTimeout(() => {
          fn(...args);
        }, delayMs);
      };
    };
    exports.debounce = debounce;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/index.js
var require_utils2 = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_isNullOrUndefined(), exports);
    __exportStar(require_sleep(), exports);
    __exportStar(require_ValueConverters(), exports);
    __exportStar(require_VoidFunction(), exports);
    __exportStar(require_serializeUser(), exports);
    __exportStar(require_debounce(), exports);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/utils/canonicalizeUri.js
var require_canonicalizeUri = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/utils/canonicalizeUri.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.canonicalizeUri = void 0;
    function canonicalizeUri(uri) {
      return uri.replace(/\/+$/, "");
    }
    exports.canonicalizeUri = canonicalizeUri;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/constants.js
var require_constants = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MinInt = exports.EmptyString = void 0;
    exports.EmptyString = "";
    exports.MinInt = 2147483648;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/Configuration.js
var require_Configuration = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/Configuration.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defaultValues = void 0;
    var Validators_1 = require_Validators();
    var OptionMessages_1 = __importDefault(require_OptionMessages());
    var InMemoryStore_1 = __importDefault(require_InMemoryStore());
    var isNullOrUndefined_1 = require_isNullOrUndefined();
    var canonicalizeUri_1 = require_canonicalizeUri();
    var NullBootstrapProvider_1 = require_NullBootstrapProvider();
    var constants_1 = require_constants();
    var DataSyncMode_1 = require_DataSyncMode();
    var bootstrap_1 = require_bootstrap();
    var validations = {
      startWaitTime: Validators_1.TypeValidators.Number,
      sdkKey: Validators_1.TypeValidators.String,
      pollingUri: Validators_1.TypeValidators.String,
      streamingUri: Validators_1.TypeValidators.String,
      eventsUri: Validators_1.TypeValidators.String,
      webSocketPingInterval: Validators_1.TypeValidators.Number,
      logger: Validators_1.TypeValidators.Object,
      store: Validators_1.TypeValidators.ObjectOrFactory,
      dataSynchronizer: Validators_1.TypeValidators.ObjectOrFactory,
      flushInterval: Validators_1.TypeValidators.Number,
      maxEventsInQueue: Validators_1.TypeValidators.Number,
      pollingInterval: Validators_1.TypeValidators.Number,
      offline: Validators_1.TypeValidators.Boolean,
      dataSyncMode: Validators_1.TypeValidators.String,
      bootstrap: Validators_1.TypeValidators.Bootstrap,
      user: Validators_1.TypeValidators.User
    };
    exports.defaultValues = {
      startWaitTime: 5e3,
      sdkKey: "",
      pollingUri: "",
      streamingUri: "",
      eventsUri: "",
      dataSyncMode: DataSyncMode_1.DataSyncModeEnum.STREAMING,
      sendEvents: true,
      webSocketPingInterval: 18 * 1e3,
      flushInterval: 2e3,
      maxEventsInQueue: 1e4,
      pollingInterval: 3e4,
      offline: false,
      store: (options) => new InMemoryStore_1.default(),
      bootstrap: void 0,
      user: void 0
    };
    function validateTypesAndNames(options) {
      let errors = [];
      const validatedOptions = Object.assign({}, exports.defaultValues);
      Object.keys(options).forEach((optionName) => {
        var _a;
        const optionValue = options[optionName];
        const validator = validations[optionName];
        if (validator) {
          if (!validator.is(optionValue)) {
            if (validator.getType() === "boolean") {
              errors.push(OptionMessages_1.default.wrongOptionTypeBoolean(optionName, typeof optionValue));
              validatedOptions[optionName] = !!optionValue;
            } else if (validator instanceof Validators_1.NumberWithMinimum && Validators_1.TypeValidators.Number.is(optionValue)) {
              const { min } = validator;
              errors.push(OptionMessages_1.default.optionBelowMinimum(optionName, optionValue, min));
              validatedOptions[optionName] = min;
            } else if (validator instanceof Validators_1.UserValidator) {
              errors = [...errors, ...validator.messages];
              validatedOptions[optionName] = exports.defaultValues[optionName];
            } else {
              errors.push(OptionMessages_1.default.wrongOptionType(optionName, validator.getType(), typeof optionValue));
              validatedOptions[optionName] = exports.defaultValues[optionName];
            }
          } else {
            validatedOptions[optionName] = optionValue;
          }
        } else {
          (_a = options.logger) === null || _a === void 0 ? void 0 : _a.warn(OptionMessages_1.default.unknownOption(optionName));
        }
      });
      return { errors, validatedOptions };
    }
    function validateEndpoints(options, validatedOptions) {
      var _a, _b, _c;
      const { streamingUri, pollingUri, eventsUri } = options;
      const streamingUriMissing = (0, isNullOrUndefined_1.isNullOrUndefined)(streamingUri) || streamingUri === constants_1.EmptyString;
      const pollingUriMissing = (0, isNullOrUndefined_1.isNullOrUndefined)(pollingUri) || pollingUri === constants_1.EmptyString;
      const eventsUriMissing = (0, isNullOrUndefined_1.isNullOrUndefined)(eventsUri) || eventsUri === constants_1.EmptyString;
      if (!validatedOptions.offline && (eventsUriMissing || streamingUriMissing && pollingUriMissing)) {
        if (eventsUriMissing) {
          (_a = validatedOptions.logger) === null || _a === void 0 ? void 0 : _a.error(OptionMessages_1.default.partialEndpoint("eventsUri"));
        }
        if (validatedOptions.dataSyncMode === DataSyncMode_1.DataSyncModeEnum.STREAMING && streamingUriMissing) {
          (_b = validatedOptions.logger) === null || _b === void 0 ? void 0 : _b.error(OptionMessages_1.default.partialEndpoint("streamingUri"));
        }
        if (validatedOptions.dataSyncMode === DataSyncMode_1.DataSyncModeEnum.POLLING && pollingUriMissing) {
          (_c = validatedOptions.logger) === null || _c === void 0 ? void 0 : _c.error(OptionMessages_1.default.partialEndpoint("pollingUri"));
        }
      }
    }
    var Configuration = class {
      constructor(options = {}) {
        var _a, _b;
        this.bootstrapProvider = new NullBootstrapProvider_1.NullBootstrapProvider();
        options = options || {};
        this.logger = options.logger;
        const { errors, validatedOptions } = validateTypesAndNames(options);
        errors.forEach((error) => {
          var _a2;
          (_a2 = this.logger) === null || _a2 === void 0 ? void 0 : _a2.warn(error);
        });
        this.user = options.user;
        validateEndpoints(options, validatedOptions);
        this.streamingUri = `${(0, canonicalizeUri_1.canonicalizeUri)(validatedOptions.streamingUri)}/streaming`;
        this.pollingUri = `${(0, canonicalizeUri_1.canonicalizeUri)(validatedOptions.pollingUri)}/api/public/sdk/client/latest-all`;
        this.eventsUri = `${(0, canonicalizeUri_1.canonicalizeUri)(validatedOptions.eventsUri)}/api/public/insight/track`;
        this.startWaitTime = validatedOptions.startWaitTime;
        this.sdkKey = validatedOptions.sdkKey;
        this.webSocketPingInterval = validatedOptions.webSocketPingInterval;
        this.flushInterval = validatedOptions.flushInterval;
        this.maxEventsInQueue = validatedOptions.maxEventsInQueue;
        this.pollingInterval = validatedOptions.pollingInterval;
        this.offline = validatedOptions.offline;
        if (validatedOptions.bootstrap && validatedOptions.bootstrap.length > 0) {
          try {
            this.bootstrapProvider = new bootstrap_1.JsonBootstrapProvider(validatedOptions.bootstrap);
          } catch (_) {
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error("Failed to parse bootstrap JSON, use NullBootstrapProvider.");
          }
        }
        if (this.offline) {
          (_b = this.logger) === null || _b === void 0 ? void 0 : _b.info("Offline mode enabled. No data synchronization with the FeatBit server will occur.");
        }
        this.dataSyncMode = validatedOptions.dataSyncMode;
        if (Validators_1.TypeValidators.Function.is(validatedOptions.dataSynchronizer)) {
          this.dataSynchronizerFactory = validatedOptions.dataSynchronizer;
        } else {
          this.dataSynchronizerFactory = () => validatedOptions.dataSynchronizer;
        }
        if (Validators_1.TypeValidators.Function.is(validatedOptions.store)) {
          this.storeFactory = validatedOptions.store;
        } else {
          this.storeFactory = () => validatedOptions.store;
        }
      }
    };
    exports.default = Configuration;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/Context.js
var require_Context = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/Context.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Context = class _Context {
      /**
       * Contexts should be created using the static factory method {@link Context.fromUser}.
       *
       * The factory methods are static functions within the class because they access private
       * implementation details, so they cannot be free functions.
       */
      constructor(valid, message) {
        this.valid = valid;
        this.message = message;
      }
      static fromUser(user) {
        if (!user) {
          return _Context.contextForError("No user specified");
        }
        const { keyId, name } = user;
        if (keyId === void 0 || keyId === null || keyId.trim() === "") {
          return _Context.contextForError("key is mandatory");
        }
        const context2 = new _Context(true);
        context2._user = user;
        return context2;
      }
      get user() {
        return this._user;
      }
      get keyId() {
        return this._user.keyId;
      }
      value(property) {
        var _a, _b, _c, _d, _e;
        if (property === "keyId") {
          return (_a = this._user) === null || _a === void 0 ? void 0 : _a.keyId;
        } else if (property === "name") {
          return (_b = this._user) === null || _b === void 0 ? void 0 : _b.name;
        } else {
          return (_e = (_d = (_c = this._user) === null || _c === void 0 ? void 0 : _c.customizedProperties) === null || _d === void 0 ? void 0 : _d.find((x) => x.name === property)) === null || _e === void 0 ? void 0 : _e.value;
        }
      }
      static contextForError(message) {
        return new _Context(false, message);
      }
    };
    exports.default = Context;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/FbClientCore.js
var require_FbClientCore = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/FbClientCore.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FbClientCore = void 0;
    var Configuration_1 = __importDefault(require_Configuration());
    var ClientContext_1 = __importDefault(require_ClientContext());
    var DataSourceUpdates_1 = __importDefault(require_DataSourceUpdates());
    var createStreamListeners_1 = require_createStreamListeners();
    var WebSocketDataSynchronizer_1 = __importDefault(require_WebSocketDataSynchronizer());
    var PollingDataSynchronizer_1 = __importDefault(require_PollingDataSynchronizer());
    var Requestor_1 = __importDefault(require_Requestor());
    var DataKinds_1 = __importDefault(require_DataKinds());
    var Evaluator_1 = __importDefault(require_Evaluator());
    var ReasonKinds_1 = require_ReasonKinds();
    var errors_1 = require_errors();
    var Context_1 = __importDefault(require_Context());
    var ValueConverters_1 = require_ValueConverters();
    var NullDataSynchronizer_1 = require_NullDataSynchronizer();
    var NullEventProcessor_1 = require_NullEventProcessor();
    var DefaultEventProcessor_1 = require_DefaultEventProcessor();
    var event_1 = require_event();
    var DataSyncMode_1 = require_DataSyncMode();
    var Validators_1 = require_Validators();
    var ClientState;
    (function(ClientState2) {
      ClientState2[ClientState2["Initializing"] = 0] = "Initializing";
      ClientState2[ClientState2["Initialized"] = 1] = "Initialized";
      ClientState2[ClientState2["Failed"] = 2] = "Failed";
    })(ClientState || (ClientState = {}));
    var FbClientCore = class {
      constructor(options, platform, callbacks) {
        this.options = options;
        this.platform = platform;
        this.state = ClientState.Initializing;
        this.onError = callbacks.onError;
        this.onFailed = callbacks.onFailed;
        this.onReady = callbacks.onReady;
        const { onUpdate, hasEventListeners } = callbacks;
        const config = new Configuration_1.default(options);
        if (!config.sdkKey && !config.offline) {
          throw new Error("You must configure the client with an SDK key");
        }
        if (!config.user) {
          throw new Error("You must configure the client with a user");
        }
        this.config = config;
        this.logger = config.logger;
        this.init(onUpdate, hasEventListeners);
      }
      init(onUpdate, hasEventListeners) {
        var _a, _b, _c;
        return __awaiter4(this, void 0, void 0, function* () {
          const clientContext = new ClientContext_1.default(this.config.sdkKey, this.config, this.platform);
          this.store = this.config.storeFactory(clientContext);
          yield this.store.identify(this.config.user);
          this.dataSourceUpdates = new DataSourceUpdates_1.default(this.store, hasEventListeners, onUpdate);
          this.evaluator = new Evaluator_1.default(this.store);
          yield this.config.bootstrapProvider.populate(this.config.user.keyId, this.dataSourceUpdates);
          if (this.config.offline) {
            this.eventProcessor = new NullEventProcessor_1.NullEventProcessor();
            this.dataSynchronizer = new NullDataSynchronizer_1.NullDataSynchronizer();
            this.initSuccess();
          } else {
            this.eventProcessor = new DefaultEventProcessor_1.DefaultEventProcessor(clientContext);
            const listeners = (0, createStreamListeners_1.createStreamListeners)(this.dataSourceUpdates, this.logger, {
              put: () => this.initSuccess(),
              patch: () => this.initSuccess()
            });
            const dataSynchronizer = this.config.dataSyncMode === DataSyncMode_1.DataSyncModeEnum.STREAMING ? new WebSocketDataSynchronizer_1.default(this.config.sdkKey, this.config.user, clientContext, this.platform.webSocket, () => this.store.version, listeners, this.config.webSocketPingInterval) : new PollingDataSynchronizer_1.default(this.config, new Requestor_1.default(this.config.sdkKey, this.config, this.platform.info, this.platform.requests), () => this.store.version, listeners, (e) => this.dataSourceErrorHandler(e));
            this.dataSynchronizer = (_c = (_b = (_a = this.config).dataSynchronizerFactory) === null || _b === void 0 ? void 0 : _b.call(_a, clientContext, this.store, this.dataSourceUpdates, () => this.initSuccess(), (e) => this.dataSourceErrorHandler(e))) !== null && _c !== void 0 ? _c : dataSynchronizer;
          }
          this.start();
        });
      }
      identify(user) {
        var _a;
        return __awaiter4(this, void 0, void 0, function* () {
          const validator = new Validators_1.UserValidator();
          if (!validator.is(user)) {
            validator.messages.forEach((error) => {
              var _a2;
              (_a2 = this.logger) === null || _a2 === void 0 ? void 0 : _a2.warn(error);
            });
            return;
          }
          const [oldFlags, oldVersion] = this.store.all(DataKinds_1.default.Flags);
          const oldData = {
            flags: Object.assign({}, oldFlags),
            version: oldVersion
          };
          this.config.user = user;
          yield this.store.identify(user);
          this.dataSynchronizer.identify(user);
          const [newFlags, newVersion] = this.store.all(DataKinds_1.default.Flags);
          const newData = {
            flags: Object.assign({}, newFlags),
            version: newVersion
          };
          if (Object.keys(newFlags).length === 0) {
            yield this.config.bootstrapProvider.populate(user.keyId, this.dataSourceUpdates);
          } else {
            (_a = this.dataSourceUpdates) === null || _a === void 0 ? void 0 : _a.checkUpdates(oldData, newData);
          }
        });
      }
      start() {
        if (this.config.offline) {
          return;
        }
        this.dataSynchronizer.start();
        setTimeout(() => {
          var _a, _b;
          if (!this.initialized()) {
            const msg = `FbClient failed to start successfully within ${this.config.startWaitTime} milliseconds. This error usually indicates a connection issue with FeatBit or an invalid sdkKey.Please double-check your sdkKey and streamingUri/pollingUri configuration. We will continue to initialize the FbClient, it still have a chance to get to work if it's a temporary network issue`;
            const error = new errors_1.TimeoutError(msg);
            this.state = ClientState.Failed;
            this.rejectionReason = error;
            (_a = this.initReject) === null || _a === void 0 ? void 0 : _a.call(this, error);
            return (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn(msg);
          }
        }, this.config.startWaitTime);
      }
      initialized() {
        return this.state === ClientState.Initialized;
      }
      waitForInitialization() {
        if (this.initializedPromise) {
          return this.initializedPromise;
        }
        if (this.state === ClientState.Initialized) {
          this.initializedPromise = Promise.resolve(this);
          return this.initializedPromise;
        }
        if (this.state === ClientState.Failed) {
          this.initializedPromise = Promise.reject(this.rejectionReason);
          return this.initializedPromise;
        }
        if (!this.initializedPromise) {
          this.initializedPromise = new Promise((resolve, reject) => {
            this.initResolve = resolve;
            this.initReject = reject;
          });
        }
        return this.initializedPromise;
      }
      boolVariation(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.bool).value;
      }
      boolVariationDetail(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.bool);
      }
      jsonVariation(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.json).value;
      }
      jsonVariationDetail(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.json);
      }
      numberVariation(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.number).value;
      }
      numberVariationDetail(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.number);
      }
      stringVariation(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.string).value;
      }
      stringVariationDetail(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.string);
      }
      variation(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.string).value;
      }
      variationDetail(key, defaultValue) {
        return this.evaluateCore(key, defaultValue, ValueConverters_1.ValueConverters.string);
      }
      getAllVariations() {
        var _a;
        const context2 = Context_1.default.fromUser(this.config.user);
        if (!context2.valid) {
          const error = new errors_1.ClientError(`${(_a = context2.message) !== null && _a !== void 0 ? _a : "User not valid;"} returning default value.`);
          this.onError(error);
          return Promise.resolve([]);
        }
        const [flags, _] = this.store.all(DataKinds_1.default.Flags);
        const result = Object.keys(flags).map((flagKey) => {
          var _a2;
          const evalResult = this.evaluator.evaluate(flagKey);
          return { flagKey, kind: evalResult.kind, reason: evalResult.reason, value: (_a2 = evalResult.value) === null || _a2 === void 0 ? void 0 : _a2.variation };
        });
        return Promise.resolve(result);
      }
      close() {
        var _a;
        return __awaiter4(this, void 0, void 0, function* () {
          yield this.eventProcessor.close();
          (_a = this.dataSynchronizer) === null || _a === void 0 ? void 0 : _a.close();
          this.store.close();
        });
      }
      track(eventName, metricValue) {
        const metricEvent = new event_1.MetricEvent(this.config.user, eventName, this.platform.info.appType, metricValue !== null && metricValue !== void 0 ? metricValue : 1);
        this.eventProcessor.record(metricEvent);
        return;
      }
      flush(callback) {
        return __awaiter4(this, void 0, void 0, function* () {
          try {
            yield this.eventProcessor.flush();
            callback === null || callback === void 0 ? void 0 : callback(true);
            return true;
          } catch (err) {
            callback === null || callback === void 0 ? void 0 : callback(false);
            return false;
          }
        });
      }
      evaluateCore(flagKey, defaultValue, typeConverter) {
        var _a, _b, _c;
        const context2 = Context_1.default.fromUser(this.config.user);
        if (!context2.valid) {
          const error = new errors_1.ClientError(`${(_a = context2.message) !== null && _a !== void 0 ? _a : "User not valid;"} returning default value.`);
          this.onError(error);
          return { flagKey, kind: ReasonKinds_1.ReasonKinds.Error, reason: error.message, value: defaultValue };
        }
        const evalResult = this.evaluator.evaluate(flagKey);
        if (evalResult.kind === ReasonKinds_1.ReasonKinds.FlagNotFound) {
          const error = new errors_1.ClientError(evalResult.reason);
          this.onError(error);
          return { flagKey, kind: evalResult.kind, reason: evalResult.reason, value: defaultValue };
        }
        if (!this.initialized()) {
          (_b = this.logger) === null || _b === void 0 ? void 0 : _b.warn("Variation called before FeatBit client initialization completed (did you wait for the'ready' event?)");
        } else {
          this.eventProcessor.record(evalResult.toEvalEvent(this.config.user));
        }
        const { isSucceeded, value } = typeConverter((_c = evalResult.value) === null || _c === void 0 ? void 0 : _c.variation);
        return isSucceeded ? { flagKey, kind: evalResult.kind, reason: evalResult.reason, value } : { flagKey, kind: ReasonKinds_1.ReasonKinds.WrongType, reason: "type mismatch", value: defaultValue };
      }
      dataSourceErrorHandler(e) {
        var _a;
        const error = e.code === 401 ? new Error("Authentication failed. Double check your SDK key.") : e;
        this.onError(error);
        this.onFailed(error);
        if (!this.initialized()) {
          this.state = ClientState.Failed;
          this.rejectionReason = error;
          (_a = this.initReject) === null || _a === void 0 ? void 0 : _a.call(this, error);
        }
      }
      initSuccess() {
        var _a, _b;
        if (!this.initialized()) {
          this.state = ClientState.Initialized;
          (_a = this.logger) === null || _a === void 0 ? void 0 : _a.info("FbClient started successfully.");
          (_b = this.initResolve) === null || _b === void 0 ? void 0 : _b.call(this, this);
          this.onReady();
        }
      }
    };
    exports.FbClientCore = FbClientCore;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/version.js
var require_version = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/version.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.name = exports.version = void 0;
    exports.version = "3.0.12";
    exports.name = "@featbit/js-client-sdk";
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserInfo.js
var require_BrowserInfo = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserInfo.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var version_1 = require_version();
    var BrowserInfo = class {
      get appType() {
        return "Browser-Client-SDK";
      }
      platformData() {
        return {
          os: {},
          name: "Browser",
          additional: {}
        };
      }
      sdkData() {
        return {
          name: version_1.name,
          version: version_1.version,
          userAgent: `${this.appType}/${version_1.version}`
        };
      }
    };
    exports.default = BrowserInfo;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserPlatform.js
var require_BrowserPlatform = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/BrowserPlatform.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserPlatform = void 0;
    var BrowserInfo_1 = __importDefault(require_BrowserInfo());
    var BrowserRequests_1 = require_BrowserRequests();
    var BrowserWebSocket_1 = __importDefault(require_BrowserWebSocket());
    var BrowserPlatform = class {
      constructor(options) {
        this.info = new BrowserInfo_1.default();
        this.requests = new BrowserRequests_1.BrowserRequests();
        this.webSocket = new BrowserWebSocket_1.default();
      }
    };
    exports.BrowserPlatform = BrowserPlatform;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/LocalStorageStore.js
var require_LocalStorageStore = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/LocalStorageStore.js"(exports) {
    "use strict";
    var __awaiter4 = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var store_1 = require_store();
    var BaseStore_1 = require_BaseStore();
    var serializeUser_1 = require_serializeUser();
    var LocalStorageStore = class extends BaseStore_1.BaseStore {
      constructor(options) {
        super();
        this.logger = options.logger;
      }
      /* eslint-disable class-methods-use-this */
      close() {
      }
      get description() {
        return "local-storage-store";
      }
      // This method needs to be overridden in the child class
      saveUser() {
        return __awaiter4(this, void 0, void 0, function* () {
          localStorage.setItem(store_1.CurrentUserStorageKey, (0, serializeUser_1.serializeUser)(this._user));
        });
      }
      dumpStoreToStorage() {
        return __awaiter4(this, void 0, void 0, function* () {
          const storageKey = `${store_1.StoreStorageKey}-${this._user.keyId}`;
          localStorage.setItem(storageKey, JSON.stringify(this.store));
        });
      }
      loadStoreFromStorage() {
        return __awaiter4(this, void 0, void 0, function* () {
          const storageKey = `${store_1.StoreStorageKey}-${this._user.keyId}`;
          const dataStoreStr = localStorage.getItem(storageKey);
          let store = null;
          try {
            if (dataStoreStr && dataStoreStr.trim().length > 0) {
              store = JSON.parse(dataStoreStr);
            }
          } catch (err) {
            this.logger.error(`error while loading local data store: ${storageKey}`, err);
          }
          if (!!store) {
            this.store = store;
          } else {
            this.store = {
              flags: {},
              version: 0
            };
          }
        });
      }
    };
    exports.default = LocalStorageStore;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/FbClient.js
var require_FbClient = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/platform/browser/FbClient.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var FbClientCore_1 = require_FbClientCore();
    var BasicLogger_1 = require_BasicLogger();
    var EventEmitter_1 = require_EventEmitter();
    var SafeLogger_1 = require_SafeLogger();
    var Emits_1 = require_Emits();
    var BrowserPlatform_1 = require_BrowserPlatform();
    var LocalStorageStore_1 = __importDefault(require_LocalStorageStore());
    var FbClient = class extends FbClientCore_1.FbClientCore {
      constructor(options, platform = void 0) {
        const fallbackLogger = new BasicLogger_1.BasicLogger({
          level: "none",
          destination: console.log
        });
        const logger = options.logger ? new SafeLogger_1.SafeLogger(options.logger, fallbackLogger) : fallbackLogger;
        const emitter = new EventEmitter_1.EventEmitter(logger);
        let { store } = options;
        if (!store) {
          store = new LocalStorageStore_1.default(options);
        }
        super(Object.assign(Object.assign({}, options), { logger, store }), platform !== null && platform !== void 0 ? platform : new BrowserPlatform_1.BrowserPlatform(Object.assign(Object.assign({}, options), { logger })), {
          onError: (err) => {
            if (emitter.listenerCount("error")) {
              emitter.emit("error", err);
            }
          },
          onFailed: (err) => {
            emitter.emit("failed", err);
          },
          onReady: () => {
            emitter.emit("ready");
          },
          onUpdate: (keys) => {
            emitter.emit("update", [keys]);
            keys.forEach((key) => emitter.emit(`update:${key}`, key));
          },
          hasEventListeners: () => emitter.eventNames().some((name) => name === "update" || typeof name === "string" && name.startsWith("update:"))
        });
        this.emitter = emitter;
      }
    };
    exports.default = (0, Emits_1.Emits)(FbClient);
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/FbClientBuilder.js
var require_FbClientBuilder = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/FbClientBuilder.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FbClientBuilder = void 0;
    var FbClient_1 = __importDefault(require_FbClient());
    var FbClientBuilder3 = class {
      constructor(options) {
        this._options = options !== null && options !== void 0 ? options : {};
      }
      /**
       * Creates a new instance of the FeatBit client.
       */
      build() {
        return new FbClient_1.default(this._options, this._platform);
      }
      platform(platform) {
        this._platform = platform;
        return this;
      }
      /**
       * Refer to {@link IOptions.startWaitTime}.
       */
      startWaitTime(startWaitTime) {
        this._options.startWaitTime = startWaitTime;
        return this;
      }
      /**
       * Refer to {@link IOptions.sdkKey}.
       */
      sdkKey(sdkKey) {
        this._options.sdkKey = sdkKey;
        return this;
      }
      /**
       * Refer to {@link IOptions.user}.
       */
      user(user) {
        this._options.user = user;
        return this;
      }
      /**
       * Refer to {@link IOptions.streamingUri}.
       */
      streamingUri(streamingUri) {
        this._options.streamingUri = streamingUri;
        return this;
      }
      /**
       * Refer to {@link IOptions.pollingUri}.
       */
      pollingUri(pollingUri) {
        this._options.pollingUri = pollingUri;
        return this;
      }
      /**
       * Refer to {@link IOptions.eventsUri}.
       */
      eventsUri(eventsUri) {
        this._options.eventsUri = eventsUri;
        return this;
      }
      /**
       * Refer to {@link IOptions.dataSyncMode}.
       */
      dataSyncMode(mode) {
        this._options.dataSyncMode = mode;
        return this;
      }
      /**
       * Refer to {@link IOptions.pollingInterval}.
       */
      pollingInterval(pollingInterval) {
        this._options.pollingInterval = pollingInterval;
        return this;
      }
      /**
       * Refer to {@link IOptions.flushInterval}.
       */
      flushInterval(flushInterval) {
        this._options.flushInterval = flushInterval;
        return this;
      }
      /**
       * Refer to {@link IOptions.maxEventsInQueue}.
       */
      maxEventsInQueue(maxEventsInQueue) {
        this._options.maxEventsInQueue = maxEventsInQueue;
        return this;
      }
      /**
       * Refer to {@link IOptions.logger}.
       */
      logger(logger) {
        this._options.logger = logger;
        return this;
      }
      /**
       * Refer to {@link IOptions.offline}.
       */
      offline(offline) {
        this._options.offline = offline;
        return this;
      }
      /**
       * Use the JsonBootstrapProvider.
       */
      bootstrap(flags) {
        this._options.bootstrap = flags;
        return this;
      }
      /**
       * Refer to {@link IOptions.dataSynchronizer}.
       */
      dataSynchronizer(dataSynchronizer) {
        this._options.dataSynchronizer = dataSynchronizer;
        return this;
      }
    };
    exports.FbClientBuilder = FbClientBuilder3;
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/IContextProperty.js
var require_IContextProperty = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/IContextProperty.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/IDataKind.js
var require_IDataKind = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/IDataKind.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/IFbClient.js
var require_IFbClient = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/IFbClient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/IVersionedData.js
var require_IVersionedData = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/IVersionedData.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@featbit/js-client-sdk/dist/esm/index.js
var require_esm = __commonJS({
  "node_modules/@featbit/js-client-sdk/dist/esm/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_bootstrap(), exports);
    __exportStar(require_data_sources(), exports);
    __exportStar(require_evaluation(), exports);
    __exportStar(require_events(), exports);
    __exportStar(require_logging(), exports);
    __exportStar(require_options(), exports);
    __exportStar(require_platform(), exports);
    __exportStar(require_store2(), exports);
    __exportStar(require_data_sync(), exports);
    __exportStar(require_utils2(), exports);
    __exportStar(require_Configuration(), exports);
    __exportStar(require_constants(), exports);
    __exportStar(require_Context(), exports);
    __exportStar(require_errors(), exports);
    __exportStar(require_FbClientBuilder(), exports);
    __exportStar(require_IContextProperty(), exports);
    __exportStar(require_IDataKind(), exports);
    __exportStar(require_IFbClient(), exports);
    __exportStar(require_IVersionedData(), exports);
    __exportStar(require_FbClientCore(), exports);
  }
});

// node_modules/lodash.camelcase/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.camelcase/index.js"(exports, module) {
    var INFINITY = 1 / 0;
    var symbolTag = "[object Symbol]";
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f\\ufe20-\\ufe23";
    var rsComboSymbolsRange = "\\u20d0-\\u20f0";
    var rsDingbatRange = "\\u2700-\\u27bf";
    var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
    var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
    var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
    var rsPunctuationRange = "\\u2000-\\u206f";
    var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['’]";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsBreak = "[" + rsBreakRange + "]";
    var rsCombo = "[" + rsComboMarksRange + rsComboSymbolsRange + "]";
    var rsDigits = "\\d+";
    var rsDingbat = "[" + rsDingbatRange + "]";
    var rsLower = "[" + rsLowerRange + "]";
    var rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsUpper = "[" + rsUpperRange + "]";
    var rsZWJ = "\\u200d";
    var rsLowerMisc = "(?:" + rsLower + "|" + rsMisc + ")";
    var rsUpperMisc = "(?:" + rsUpper + "|" + rsMisc + ")";
    var rsOptLowerContr = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
    var rsOptUpperContr = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reApos = RegExp(rsApos, "g");
    var reComboMark = RegExp(rsCombo, "g");
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    var reUnicodeWord = RegExp([
      rsUpper + "?" + rsLower + "+" + rsOptLowerContr + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
      rsUpperMisc + "+" + rsOptUpperContr + "(?=" + [rsBreak, rsUpper + rsLowerMisc, "$"].join("|") + ")",
      rsUpper + "?" + rsLowerMisc + "+" + rsOptLowerContr,
      rsUpper + "+" + rsOptUpperContr,
      rsDigits,
      rsEmoji
    ].join("|"), "g");
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + "]");
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var deburredLetters = {
      // Latin-1 Supplement block.
      "À": "A",
      "Á": "A",
      "Â": "A",
      "Ã": "A",
      "Ä": "A",
      "Å": "A",
      "à": "a",
      "á": "a",
      "â": "a",
      "ã": "a",
      "ä": "a",
      "å": "a",
      "Ç": "C",
      "ç": "c",
      "Ð": "D",
      "ð": "d",
      "È": "E",
      "É": "E",
      "Ê": "E",
      "Ë": "E",
      "è": "e",
      "é": "e",
      "ê": "e",
      "ë": "e",
      "Ì": "I",
      "Í": "I",
      "Î": "I",
      "Ï": "I",
      "ì": "i",
      "í": "i",
      "î": "i",
      "ï": "i",
      "Ñ": "N",
      "ñ": "n",
      "Ò": "O",
      "Ó": "O",
      "Ô": "O",
      "Õ": "O",
      "Ö": "O",
      "Ø": "O",
      "ò": "o",
      "ó": "o",
      "ô": "o",
      "õ": "o",
      "ö": "o",
      "ø": "o",
      "Ù": "U",
      "Ú": "U",
      "Û": "U",
      "Ü": "U",
      "ù": "u",
      "ú": "u",
      "û": "u",
      "ü": "u",
      "Ý": "Y",
      "ý": "y",
      "ÿ": "y",
      "Æ": "Ae",
      "æ": "ae",
      "Þ": "Th",
      "þ": "th",
      "ß": "ss",
      // Latin Extended-A block.
      "Ā": "A",
      "Ă": "A",
      "Ą": "A",
      "ā": "a",
      "ă": "a",
      "ą": "a",
      "Ć": "C",
      "Ĉ": "C",
      "Ċ": "C",
      "Č": "C",
      "ć": "c",
      "ĉ": "c",
      "ċ": "c",
      "č": "c",
      "Ď": "D",
      "Đ": "D",
      "ď": "d",
      "đ": "d",
      "Ē": "E",
      "Ĕ": "E",
      "Ė": "E",
      "Ę": "E",
      "Ě": "E",
      "ē": "e",
      "ĕ": "e",
      "ė": "e",
      "ę": "e",
      "ě": "e",
      "Ĝ": "G",
      "Ğ": "G",
      "Ġ": "G",
      "Ģ": "G",
      "ĝ": "g",
      "ğ": "g",
      "ġ": "g",
      "ģ": "g",
      "Ĥ": "H",
      "Ħ": "H",
      "ĥ": "h",
      "ħ": "h",
      "Ĩ": "I",
      "Ī": "I",
      "Ĭ": "I",
      "Į": "I",
      "İ": "I",
      "ĩ": "i",
      "ī": "i",
      "ĭ": "i",
      "į": "i",
      "ı": "i",
      "Ĵ": "J",
      "ĵ": "j",
      "Ķ": "K",
      "ķ": "k",
      "ĸ": "k",
      "Ĺ": "L",
      "Ļ": "L",
      "Ľ": "L",
      "Ŀ": "L",
      "Ł": "L",
      "ĺ": "l",
      "ļ": "l",
      "ľ": "l",
      "ŀ": "l",
      "ł": "l",
      "Ń": "N",
      "Ņ": "N",
      "Ň": "N",
      "Ŋ": "N",
      "ń": "n",
      "ņ": "n",
      "ň": "n",
      "ŋ": "n",
      "Ō": "O",
      "Ŏ": "O",
      "Ő": "O",
      "ō": "o",
      "ŏ": "o",
      "ő": "o",
      "Ŕ": "R",
      "Ŗ": "R",
      "Ř": "R",
      "ŕ": "r",
      "ŗ": "r",
      "ř": "r",
      "Ś": "S",
      "Ŝ": "S",
      "Ş": "S",
      "Š": "S",
      "ś": "s",
      "ŝ": "s",
      "ş": "s",
      "š": "s",
      "Ţ": "T",
      "Ť": "T",
      "Ŧ": "T",
      "ţ": "t",
      "ť": "t",
      "ŧ": "t",
      "Ũ": "U",
      "Ū": "U",
      "Ŭ": "U",
      "Ů": "U",
      "Ű": "U",
      "Ų": "U",
      "ũ": "u",
      "ū": "u",
      "ŭ": "u",
      "ů": "u",
      "ű": "u",
      "ų": "u",
      "Ŵ": "W",
      "ŵ": "w",
      "Ŷ": "Y",
      "ŷ": "y",
      "Ÿ": "Y",
      "Ź": "Z",
      "Ż": "Z",
      "Ž": "Z",
      "ź": "z",
      "ż": "z",
      "ž": "z",
      "Ĳ": "IJ",
      "ĳ": "ij",
      "Œ": "Oe",
      "œ": "oe",
      "ŉ": "'n",
      "ſ": "ss"
    };
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1, length = array ? array.length : 0;
      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }
    function asciiToArray(string) {
      return string.split("");
    }
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }
    function basePropertyOf(object) {
      return function(key) {
        return object == null ? void 0 : object[key];
      };
    }
    var deburrLetter = basePropertyOf(deburredLetters);
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var Symbol2 = root.Symbol;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseSlice(array, start, end) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : end - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === void 0 ? length : end;
      return !start && end >= length ? array : baseSlice(array, start, end);
    }
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);
        var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
        var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
        return chr[methodName]() + trailing;
      };
    }
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
      };
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    var camelCase3 = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
    }
    var upperFirst = createCaseFirst("toUpperCase");
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? void 0 : pattern;
      if (pattern === void 0) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }
    module.exports = camelCase3;
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var reactIs = require_react_is();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics2(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics2(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i = 0; i < keys.length; ++i) {
          var key = keys[i];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty(targetComponent, key, descriptor);
            } catch (e) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics2;
  }
});

// node_modules/@featbit/react-client-sdk/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  FbProvider: () => provider_default,
  asyncWithFbProvider: () => asyncWithFbProvider,
  camelCaseKeys: () => camelCaseKeys,
  context: () => context_default,
  defaultReactOptions: () => defaultReactOptions,
  useFbClient: () => useFbClient_default,
  useFlags: () => useFlags_default,
  withFbConsumer: () => withFbConsumer_default,
  withFbProvider: () => withFbProvider_default
});

// node_modules/@featbit/react-client-sdk/dist/asyncWithFbProvider.js
var import_react2 = __toESM(require_react(), 1);

// node_modules/@featbit/react-client-sdk/dist/types.js
var types_exports = {};
__export(types_exports, {
  defaultReactOptions: () => defaultReactOptions
});
__reExport(types_exports, __toESM(require_esm(), 1));
var defaultReactOptions = { useCamelCaseFlagKeys: false, sendEventsOnFlagRead: true };

// node_modules/@featbit/react-client-sdk/dist/context.js
var import_react = __toESM(require_react(), 1);
var context = (0, import_react.createContext)({ flags: {}, flagKeyMap: {}, fbClient: void 0 });
var Provider = context.Provider;
var Consumer = context.Consumer;
var context_default = context;

// node_modules/@featbit/react-client-sdk/dist/getFlagsProxy.js
var import_lodash = __toESM(require_lodash(), 1);
function getFlagsProxy(fbClient, bootstrapFlags, fetchedFlags, reactOptions) {
  if (reactOptions === void 0) {
    reactOptions = defaultReactOptions;
  }
  var _a = reactOptions.useCamelCaseFlagKeys, useCamelCaseFlagKeys = _a === void 0 ? false : _a, _b = reactOptions.sendEventsOnFlagRead, sendEventsOnFlagRead = _b === void 0 ? true : _b;
  var _c = useCamelCaseFlagKeys ? getCamelizedKeysAndFlagMap(fetchedFlags) : [fetchedFlags], flags = _c[0], _d = _c[1], flagKeyMap = _d === void 0 ? {} : _d;
  return {
    flags: toFlagsProxy(fbClient, bootstrapFlags, flags, flagKeyMap, fetchedFlags, useCamelCaseFlagKeys, sendEventsOnFlagRead),
    flagKeyMap
  };
}
function getCamelizedKeysAndFlagMap(rawFlags) {
  var flags = {};
  var flagKeyMap = {};
  for (var rawFlagKey in rawFlags) {
    if (rawFlagKey.indexOf("$") === 0) {
      continue;
    }
    var camelKey = (0, import_lodash.default)(rawFlagKey);
    flags[camelKey] = rawFlags[rawFlagKey];
    flagKeyMap[camelKey] = rawFlagKey;
  }
  return [flags, flagKeyMap];
}
function hasFlag(flags, flagKey) {
  return Object.prototype.hasOwnProperty.call(flags, flagKey);
}
function toFlagsProxy(fbClient, bootstrapFlags, flags, flagKeyMap, flagsWithRawFlagKeys, useCamelCaseFlagKeys, sendEventsOnFlagRead) {
  return new Proxy(flags, {
    get: function(target, prop, receiver) {
      var currentValue = Reflect.get(target, prop, receiver) || flagsWithRawFlagKeys[prop];
      var validFlagKey = hasFlag(flagKeyMap, prop) || hasFlag(target, prop) || hasFlag(flagsWithRawFlagKeys, prop);
      if (!validFlagKey && hasFlag(bootstrapFlags, prop)) {
        return bootstrapFlags[prop];
      }
      if (typeof prop === "symbol" || !validFlagKey) {
        return currentValue;
      }
      if (useCamelCaseFlagKeys && prop !== (0, import_lodash.default)(prop)) {
        console.warn("You're attempting to access a flag with its original keyId: ".concat(prop, ", even though useCamelCaseFlagKeys is set to true."));
      }
      if (currentValue === void 0) {
        return void 0;
      }
      if (!sendEventsOnFlagRead) {
        return currentValue;
      }
      var pristineFlagKey = useCamelCaseFlagKeys ? flagKeyMap[prop] || prop : prop;
      return fbClient.variation(pristineFlagKey, currentValue);
    }
  });
}

// node_modules/@featbit/react-client-sdk/dist/asyncWithFbProvider.js
var import_js_client_sdk = __toESM(require_esm(), 1);

// node_modules/@featbit/react-client-sdk/dist/utils.js
var import_lodash2 = __toESM(require_lodash(), 1);
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return { value: op[1], done: false };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var camelCaseKeys = function(rawFlags) {
  var flags = {};
  for (var rawFlag in rawFlags) {
    if (rawFlag.indexOf("$") !== 0) {
      flags[(0, import_lodash2.default)(rawFlag)] = rawFlags[rawFlag];
    }
  }
  return flags;
};
var fetchFlags = function(fbClient) {
  return __awaiter(void 0, void 0, void 0, function() {
    var evalDetails;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          return [4, fbClient.getAllVariations()];
        case 1:
          evalDetails = _a.sent();
          return [2, evalDetails.reduce(function(acc, _a2) {
            var flagKey = _a2.flagKey, value = _a2.value;
            acc[flagKey] = value;
            return acc;
          }, {})];
      }
    });
  });
};

// node_modules/@featbit/react-client-sdk/dist/asyncWithFbProvider.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
        t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __awaiter2 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator2 = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return { value: op[1], done: false };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
function asyncWithFbProvider(config) {
  return __awaiter2(this, void 0, void 0, function() {
    var options, userReactOptions, platform, reactOptions, error, fetchedFlags, fbClient, e_1, bootstrapFlags, FbProvider2;
    return __generator2(this, function(_a) {
      switch (_a.label) {
        case 0:
          options = config.options, userReactOptions = config.reactOptions, platform = config.platform;
          reactOptions = __assign(__assign({}, defaultReactOptions), userReactOptions);
          fetchedFlags = {};
          fbClient = new import_js_client_sdk.FbClientBuilder(__assign({}, options)).platform(platform).build();
          _a.label = 1;
        case 1:
          _a.trys.push([1, 4, , 5]);
          return [4, fbClient.waitForInitialization()];
        case 2:
          _a.sent();
          return [4, fetchFlags(fbClient)];
        case 3:
          fetchedFlags = _a.sent();
          return [3, 5];
        case 4:
          e_1 = _a.sent();
          error = e_1;
          return [3, 5];
        case 5:
          bootstrapFlags = ((options === null || options === void 0 ? void 0 : options.bootstrap) || []).reduce(function(acc, flag) {
            acc[flag.id] = flag.variation;
            return acc;
          }, {});
          FbProvider2 = function(_a2) {
            var children = _a2.children;
            var _b = (0, import_react2.useState)(function() {
              return __assign(__assign({ unproxiedFlags: fetchedFlags }, getFlagsProxy(fbClient, bootstrapFlags, fetchedFlags, reactOptions)), { fbClient, error });
            }), state = _b[0], setState = _b[1];
            (0, import_react2.useEffect)(function() {
              function onReady() {
                return __awaiter2(this, void 0, void 0, function() {
                  var unproxiedFlags;
                  return __generator2(this, function(_a3) {
                    switch (_a3.label) {
                      case 0:
                        return [4, fetchFlags(fbClient)];
                      case 1:
                        unproxiedFlags = _a3.sent();
                        setState(function(prevState) {
                          return __assign(__assign(__assign({}, prevState), { unproxiedFlags }), getFlagsProxy(fbClient, bootstrapFlags, unproxiedFlags, reactOptions));
                        });
                        return [
                          2
                          /*return*/
                        ];
                    }
                  });
                });
              }
              function onFailed(e) {
                setState(function(prevState) {
                  return __assign(__assign({}, prevState), { error: e });
                });
              }
              function onUpdate(changedKeys) {
                var _this = this;
                var updates = changedKeys.reduce(function(acc, key) {
                  return __awaiter2(_this, void 0, void 0, function() {
                    var _a3, _b2;
                    return __generator2(this, function(_c) {
                      switch (_c.label) {
                        case 0:
                          _a3 = acc;
                          _b2 = key;
                          return [4, fbClient.variation(key, "")];
                        case 1:
                          _a3[_b2] = _c.sent();
                          return [2, acc];
                      }
                    });
                  });
                }, {});
                if (Object.keys(updates).length > 0) {
                  setState(function(prevState) {
                    var updatedUnproxiedFlags = __assign(__assign({}, prevState.unproxiedFlags), updates);
                    return __assign(__assign(__assign({}, prevState), { unproxiedFlags: updatedUnproxiedFlags }), getFlagsProxy(fbClient, bootstrapFlags, updatedUnproxiedFlags, reactOptions));
                  });
                }
              }
              fbClient.on("update", onUpdate);
              if (error === null || error === void 0 ? void 0 : error.name.toLowerCase().includes("timeout")) {
                fbClient.on("failed", onFailed);
                fbClient.on("ready", onReady);
              }
              return function cleanup() {
                fbClient.off("update", onUpdate);
                fbClient.off("failed", onFailed);
                fbClient.off("ready", onReady);
              };
            }, []);
            var _ = state.unproxiedFlags, rest = __rest(state, ["unproxiedFlags"]);
            return import_react2.default.createElement(Provider, { value: rest }, children);
          };
          return [2, FbProvider2];
      }
    });
  });
}

// node_modules/@featbit/react-client-sdk/dist/provider.js
var import_react3 = __toESM(require_react(), 1);
var import_js_client_sdk2 = __toESM(require_esm(), 1);
var __extends = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
        t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var __awaiter3 = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator3 = function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return { value: op[1], done: false };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var FbProvider = (
  /** @class */
  function(_super) {
    __extends(FbProvider2, _super);
    function FbProvider2(props) {
      var _this = _super.call(this, props) || this;
      _this.getReactOptions = function() {
        return __assign2(__assign2({}, defaultReactOptions), _this.props.reactOptions);
      };
      _this.subscribeToChanges = function(fbClient) {
        fbClient.on("update", function(changedKeys) {
          var updates = changedKeys.reduce(function(acc, key) {
            acc[key] = fbClient.variation(key, "");
            return acc;
          }, {});
          var unproxiedFlags = __assign2(__assign2({}, _this.state.unproxiedFlags), updates);
          if (Object.keys(updates).length > 0) {
            _this.setState(function(prevState) {
              return __assign2(__assign2(__assign2({}, prevState), { unproxiedFlags }), getFlagsProxy(fbClient, _this.bootstrapFlags, unproxiedFlags, _this.getReactOptions()));
            });
          }
        });
      };
      _this.onFailed = function(fbClient, e) {
        _this.setState(function(prevState) {
          return __assign2(__assign2({}, prevState), { error: e });
        });
      };
      _this.onReady = function(fbClient, reactOptions) {
        return __awaiter3(_this, void 0, void 0, function() {
          var unproxiedFlags;
          var _this2 = this;
          return __generator3(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, fetchFlags(fbClient)];
              case 1:
                unproxiedFlags = _a.sent();
                this.setState(function(prevState) {
                  return __assign2(__assign2(__assign2({}, prevState), { unproxiedFlags }), getFlagsProxy(fbClient, _this2.bootstrapFlags, unproxiedFlags, reactOptions));
                });
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      _this.prepareFbClient = function() {
        return __awaiter3(_this, void 0, void 0, function() {
          var _a, options2, platform, client, reactOptions, unproxiedFlags, error, e_1;
          var _this2 = this;
          return __generator3(this, function(_b) {
            switch (_b.label) {
              case 0:
                _a = this.props, options2 = _a.options, platform = _a.platform;
                client = this.props.fbClient;
                reactOptions = this.getReactOptions();
                unproxiedFlags = this.state.unproxiedFlags;
                if (!client) return [3, 2];
                return [4, fetchFlags(client)];
              case 1:
                unproxiedFlags = _b.sent();
                return [3, 7];
              case 2:
                client = new import_js_client_sdk2.FbClientBuilder(__assign2({}, options2)).platform(platform).build();
                _b.label = 3;
              case 3:
                _b.trys.push([3, 6, , 7]);
                return [4, client.waitForInitialization()];
              case 4:
                _b.sent();
                return [4, fetchFlags(client)];
              case 5:
                unproxiedFlags = _b.sent();
                return [3, 7];
              case 6:
                e_1 = _b.sent();
                error = e_1;
                if (error === null || error === void 0 ? void 0 : error.name.toLowerCase().includes("timeout")) {
                  client.on("failed", this.onFailed);
                  client.on("ready", function() {
                    _this2.onReady(client, reactOptions);
                  });
                }
                return [3, 7];
              case 7:
                this.setState(function(previousState) {
                  return __assign2(__assign2(__assign2(__assign2({}, previousState), { unproxiedFlags }), getFlagsProxy(client, _this2.bootstrapFlags, unproxiedFlags, reactOptions)), { fbClient: client, error });
                });
                this.subscribeToChanges(client);
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      };
      var options = props.options;
      _this.bootstrapFlags = ((options === null || options === void 0 ? void 0 : options.bootstrap) || []).reduce(function(acc, flag) {
        acc[flag.id] = flag.variation;
        return acc;
      }, {});
      _this.state = {
        flags: {},
        unproxiedFlags: {},
        flagKeyMap: {},
        fbClient: void 0
      };
      if ((options === null || options === void 0 ? void 0 : options.bootstrap) && (options === null || options === void 0 ? void 0 : options.bootstrap.length) > 0) {
        var useCamelCaseFlagKeys = _this.getReactOptions().useCamelCaseFlagKeys;
        var flags = useCamelCaseFlagKeys ? camelCaseKeys(_this.bootstrapFlags) : _this.bootstrapFlags;
        _this.state = {
          flags,
          unproxiedFlags: flags,
          flagKeyMap: {},
          fbClient: void 0
        };
      }
      return _this;
    }
    FbProvider2.prototype.componentDidMount = function() {
      return __awaiter3(this, void 0, void 0, function() {
        var _a, options, deferInitialization;
        return __generator3(this, function(_b) {
          switch (_b.label) {
            case 0:
              _a = this.props, options = _a.options, deferInitialization = _a.deferInitialization;
              if (deferInitialization && !options) {
                return [
                  2
                  /*return*/
                ];
              }
              return [4, this.prepareFbClient()];
            case 1:
              _b.sent();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    FbProvider2.prototype.componentDidUpdate = function(prevProps) {
      var _a;
      return __awaiter3(this, void 0, void 0, function() {
        var _b, options, deferInitialization, userJustLoaded;
        return __generator3(this, function(_c) {
          switch (_c.label) {
            case 0:
              _b = this.props, options = _b.options, deferInitialization = _b.deferInitialization;
              userJustLoaded = !((_a = prevProps.options) === null || _a === void 0 ? void 0 : _a.user) && (options === null || options === void 0 ? void 0 : options.user);
              if (!(deferInitialization && userJustLoaded)) return [3, 2];
              return [4, this.prepareFbClient()];
            case 1:
              _c.sent();
              _c.label = 2;
            case 2:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    };
    FbProvider2.prototype.render = function() {
      var _a = this.state, flags = _a.flags, flagKeyMap = _a.flagKeyMap, fbClient = _a.fbClient, error = _a.error;
      return import_react3.default.createElement(Provider, { value: { flags, flagKeyMap, fbClient, error } }, this.props.children);
    };
    return FbProvider2;
  }(import_react3.Component)
);
var provider_default = FbProvider;

// node_modules/@featbit/react-client-sdk/dist/useFlags.js
var import_react4 = __toESM(require_react(), 1);
var useFlags = function() {
  var flags = (0, import_react4.useContext)(context_default).flags;
  return flags;
};
var useFlags_default = useFlags;

// node_modules/@featbit/react-client-sdk/dist/useFbClient.js
var import_react5 = __toESM(require_react(), 1);
var useFbClient = function() {
  var fbClient = (0, import_react5.useContext)(context_default).fbClient;
  return fbClient;
};
var useFbClient_default = useFbClient;

// node_modules/@featbit/react-client-sdk/dist/withFbConsumer.js
var React3 = __toESM(require_react(), 1);
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
        t[p] = s[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
function withFbConsumer(options) {
  if (options === void 0) {
    options = { clientOnly: false };
  }
  return function withFbConsumerHoc(WrappedComponent) {
    return function(props) {
      return React3.createElement(Consumer, null, function(_a) {
        var flags = _a.flags, fbClient = _a.fbClient;
        if (options.clientOnly) {
          return React3.createElement(WrappedComponent, __assign3({ fbClient }, props));
        }
        return React3.createElement(WrappedComponent, __assign3({ flags, fbClient }, props));
      });
    };
  };
}
var withFbConsumer_default = withFbConsumer;

// node_modules/@featbit/react-client-sdk/dist/withFbProvider.js
var React4 = __toESM(require_react(), 1);
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs(), 1);
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
        t[p] = s[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
function withFbProvider(config) {
  return function withFbProviderHoc(WrappedComponent) {
    var userReactOptions = config.reactOptions;
    var reactOptions = __assign4(__assign4({}, defaultReactOptions), userReactOptions);
    var providerProps = __assign4(__assign4({}, config), { reactOptions });
    function HoistedComponent(props) {
      return React4.createElement(
        provider_default,
        __assign4({}, providerProps),
        React4.createElement(WrappedComponent, __assign4({}, props))
      );
    }
    (0, import_hoist_non_react_statics.default)(HoistedComponent, WrappedComponent);
    return HoistedComponent;
  };
}
var withFbProvider_default = withFbProvider;

// node_modules/@featbit/react-client-sdk/dist/index.js
__reExport(dist_exports, types_exports);
export {
  provider_default as FbProvider,
  asyncWithFbProvider,
  camelCaseKeys,
  context_default as context,
  defaultReactOptions,
  useFbClient_default as useFbClient,
  useFlags_default as useFlags,
  withFbConsumer_default as withFbConsumer,
  withFbProvider_default as withFbProvider
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@featbit_react-client-sdk.js.map
